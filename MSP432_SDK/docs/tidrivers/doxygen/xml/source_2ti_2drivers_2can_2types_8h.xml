<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="source_2ti_2drivers_2can_2types_8h" kind="file" language="C++">
    <compoundname>source/ti/drivers/can/types.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includedby refid="_c_a_n_8h" local="no">CAN.h</includedby>
    <incdepgraph>
      <node id="488">
        <label>stdint.h</label>
      </node>
      <node id="487">
        <label>stddef.h</label>
      </node>
      <node id="486">
        <label>types.h</label>
        <link refid="source_2ti_2drivers_2can_2types_8h"/>
        <childnode refid="487" relation="include">
        </childnode>
        <childnode refid="488" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="491">
        <label>CANMSP432E4.h</label>
        <link refid="_c_a_n_m_s_p432_e4_8h"/>
      </node>
      <node id="490">
        <label>CAN.h</label>
        <link refid="_c_a_n_8h"/>
        <childnode refid="491" relation="include">
        </childnode>
      </node>
      <node id="489">
        <label>types.h</label>
        <link refid="source_2ti_2drivers_2can_2types_8h"/>
        <childnode refid="490" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structcan__frame" prot="public">can_frame</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1a5ae55ab3741140024858bd7b8762ea42" prot="public" static="no">
        <name>CAN_EFF_FLAG</name>
        <initializer>0x80000000U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit flag.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="91" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1af324d65226057755175038a15d9bbd75" prot="public" static="no">
        <name>CAN_RTR_FLAG</name>
        <initializer>0x40000000U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit flag.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="98" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1a24df2eae50a2cef0f7f08c73a246a012" prot="public" static="no">
        <name>CAN_ERR_FLAG</name>
        <initializer>0x20000000U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit flag.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="105" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1afe4fc3f9cab58aeeb463861289e8ce93" prot="public" static="no">
        <name>CAN_SFF_MASK</name>
        <initializer>0x000007FFU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit mask.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="112" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1a83b943dca61d0aad5b07ec01c3317572" prot="public" static="no">
        <name>CAN_EFF_MASK</name>
        <initializer>0x1FFFFFFFU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit mask.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="119" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="source_2ti_2drivers_2can_2types_8h_1ad4061a08b8c5aa6de3bb390efd3b6bd6" prot="public" static="no">
        <name>CAN_ERR_MASK</name>
        <initializer>0x1FFFFFFFU</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>SocketCAN compatible bit mask.</para><para><simplesect kind="see"><para>CAN_frame </para></simplesect>
<simplesect kind="see"><para>struct <ref refid="structcan__frame" kindref="compound">can_frame</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="126" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="source_2ti_2drivers_2can_2types_8h_1af1c86d266c4de5b8fb79e12ff38def1f" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t canid_t</definition>
        <argsstring></argsstring>
        <name>canid_t</name>
        <briefdescription>
<para>CAN identifier structure. </para>        </briefdescription>
        <detaileddescription>
<para>bit 0-28 : CAN identifier (11/29 bit) bit 29 : error message frame flag (0 = data frame, 1 = error message) bit 30 : remote transmission request flag (1 = rtr frame) bit 31 : frame format flag (0 = standard 11 bit, 1 = extended 29 bit) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" line="51" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_can_types__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_can_types__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="source_2ti_2drivers_2can_2types_8h_1af1c86d266c4de5b8fb79e12ff38def1f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="source_2ti_2drivers_2can_2types_8h_1af1c86d266c4de5b8fb79e12ff38def1f" kindref="member">canid_t</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structcan__frame" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcan__frame" kindref="compound">can_frame</ref><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="67" refid="structcan__frame_1ac6aeb5fbc99596a37fe1519f3aa8410a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>canid_t<sp/><ref refid="structcan__frame_1ac6aeb5fbc99596a37fe1519f3aa8410a" kindref="member">can_id</ref>;<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="69" refid="structcan__frame_1a7ad0d8d62322affafbfd23839ee81d5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/><sp/>:<sp/>29;<sp/></highlight></codeline>
<codeline lineno="70" refid="structcan__frame_1a8831fc16e06232795c1c16597a8189f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcan__frame_1a8831fc16e06232795c1c16597a8189f7" kindref="member">err</ref><sp/>:<sp/><sp/>1;<sp/></highlight></codeline>
<codeline lineno="71" refid="structcan__frame_1a5ca10890737c528f19c9b72c5063c15a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcan__frame_1a5ca10890737c528f19c9b72c5063c15a" kindref="member">rtr</ref><sp/>:<sp/><sp/>1;<sp/></highlight></codeline>
<codeline lineno="72" refid="structcan__frame_1aef754ed5feee21c33124a6b3acb38ff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcan__frame_1aef754ed5feee21c33124a6b3acb38ff2" kindref="member">eff</ref><sp/>:<sp/><sp/>1;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77" refid="structcan__frame_1aa055f09fd81b299201618396b7dc9314" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1aa055f09fd81b299201618396b7dc9314" kindref="member">can_dlc</ref>;<sp/></highlight></codeline>
<codeline lineno="78" refid="structcan__frame_1a014c42277e886906e6c761bc6f21fb47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1a014c42277e886906e6c761bc6f21fb47" kindref="member">dlc</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="80" refid="structcan__frame_1a4f7ab393ab53bd407c9f89b787bb1f06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1a4f7ab393ab53bd407c9f89b787bb1f06" kindref="member">__pad</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="structcan__frame_1aaf9dc3da2700c8846a903dccdc3ac005" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1aaf9dc3da2700c8846a903dccdc3ac005" kindref="member">__res0</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="structcan__frame_1a9b0e26af790a3cf93c93143640b7c217" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1a9b0e26af790a3cf93c93143640b7c217" kindref="member">__res1</ref>;<sp/></highlight></codeline>
<codeline lineno="83" refid="structcan__frame_1ade6eedeba6cc24ef2f7a2aa2ed452291" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcan__frame_1ade6eedeba6cc24ef2f7a2aa2ed452291" kindref="member">data</ref>[8]<sp/>__attribute__((aligned(8)));<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="source_2ti_2drivers_2can_2types_8h_1a5ae55ab3741140024858bd7b8762ea42" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_EFF_FLAG<sp/>0x80000000U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="source_2ti_2drivers_2can_2types_8h_1af324d65226057755175038a15d9bbd75" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_RTR_FLAG<sp/>0x40000000U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="source_2ti_2drivers_2can_2types_8h_1a24df2eae50a2cef0f7f08c73a246a012" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ERR_FLAG<sp/>0x20000000U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="source_2ti_2drivers_2can_2types_8h_1afe4fc3f9cab58aeeb463861289e8ce93" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_SFF_MASK<sp/>0x000007FFU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="source_2ti_2drivers_2can_2types_8h_1a83b943dca61d0aad5b07ec01c3317572" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_EFF_MASK<sp/>0x1FFFFFFFU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="source_2ti_2drivers_2can_2types_8h_1ad4061a08b8c5aa6de3bb390efd3b6bd6" refkind="member"><highlight class="preprocessor">#define<sp/>CAN_ERR_MASK<sp/>0x1FFFFFFFU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_can_types__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432e4/source/ti/drivers/can/types.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_a_e_s_e_c_b_8h" kind="file" language="C++">
    <compoundname>AESECB.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_crypto_key_8h" local="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includedby refid="_a_e_s_e_c_b_m_s_p432_e4_8h" local="no">AESECBMSP432E4.h</includedby>
    <incdepgraph>
      <node id="86">
        <label>stdbool.h</label>
      </node>
      <node id="89">
        <label>ti/drivers/cryptoutils/cryptokey/CryptoKey.h</label>
        <link refid="_crypto_key_8h"/>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
      </node>
      <node id="88">
        <label>stdint.h</label>
      </node>
      <node id="85">
        <label>AESECB.h</label>
        <link refid="_a_e_s_e_c_b_8h"/>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
      </node>
      <node id="87">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="90">
        <label>AESECB.h</label>
        <link refid="_a_e_s_e_c_b_8h"/>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>AESECBMSP432E4.h</label>
        <link refid="_a_e_s_e_c_b_m_s_p432_e4_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_e_s_e_c_b___config" prot="public">AESECB_Config</innerclass>
    <innerclass refid="struct_a_e_s_e_c_b___operation" prot="public">AESECB_Operation</innerclass>
    <innerclass refid="struct_a_e_s_e_c_b___params" prot="public">AESECB_Params</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_e_s_e_c_b_8h_1a5d1005b6b5eed999a82f89f282bf384f" prot="public" static="no">
        <name>AESECB_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common AESECB status code reservation offset. AESECB driver implementations should offset status codes with AESECB_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECBXYZ_STATUS_ERROR2<sp/><sp/><sp/><sp/>AESECB_STATUS_RESERVED<sp/>-<sp/>2</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="272" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_e_c_b_8h_1a6dfa9afab09668259531f58273fa4e36" prot="public" static="no">
        <name>AESECB_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESECB_STATUS_SUCCESS if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="280" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_e_c_b_8h_1ab8792e83e4a2350e94b1f2a32d4886a2" prot="public" static="no">
        <name>AESECB_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESECB_STATUS_ERROR if the function was not executed successfully and no more pertinent error code could be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="288" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_e_c_b_8h_1a5d09cd5661ac53f7ba3141e23fde65a6" prot="public" static="no">
        <name>AESECB_STATUS_RESOURCE_UNAVAILABLE</name>
        <initializer>(-2)</initializer>
        <briefdescription>
<para>An error status code returned if the hardware or software resource is currently unavailable. </para>        </briefdescription>
        <detaileddescription>
<para>AESECB driver implementations may have hardware or software limitations on how many clients can simultaneously perform operations. This status code is returned if the mutual exclusion mechanism signals that an operation cannot currently be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="298" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_e_c_b_8h_1a4c14a4a0b8bc8798e5280761c420aa6e" prot="public" static="no">
        <name>AESECB_STATUS_CANCELED</name>
        <initializer>(-3)</initializer>
        <briefdescription>
<para>The ongoing operation was canceled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="303" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfb" prot="public" static="no">
        <name>AESECB_ReturnBehavior</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba945f7703e248cd2d0fc2a08077030e62" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_CALLBACK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will return immediately while the ECB operation goes on in the background. The registered callback function is called after the operation completes. The context the callback function is called (task, HWI, SWI) is implementation-dependent. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba09c85edf8278d95609ef9cda74e21640" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_BLOCKING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will block while ECB operation goes on in the background. ECB operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba8fb6022bf8730ca0f113fe339b3cf0d3" prot="public">
          <name>AESECB_RETURN_BEHAVIOR_POLLING</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will continuously poll a flag while ECB operation goes on in the background. ECB operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The way in which ECB function calls return after performing an encryption + authentication or decryption + verification operation. </para>        </briefdescription>
        <detaileddescription>
<para>Not all ECB operations exhibit the specified return behavor. Functions that do not require significant computation and cannot offload that computation to a background thread behave like regular functions. Which functions exhibit the specfied return behavior is not implementation dependent. Specifically, a software-backed implementation run on the same CPU as the application will emulate the return behavior while not actually offloading the computation to the background thread.</para><para>AESECB functions exhibiting the specified return behavior have restrictions on the context from which they may be called.</para><para><table rows="4" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Task </para></entry><entry thead="yes"><para>Hwi </para></entry><entry thead="yes"><para>Swi  </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_CALLBACK </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_BLOCKING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para></para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>AESECB_RETURN_BEHAVIOR_POLLING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="350" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="350" bodyend="365"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5" prot="public" static="no">
        <name>AESECB_Mode</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a444b0bc4a6fa39374155fc2f67fc6a94" prot="public">
          <name>AESECB_MODE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a2957e9be6c5c1ce87d927609ce47fb6d" prot="public">
          <name>AESECB_MODE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the direction of the ECB operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="370" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="370" bodyend="373"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8" prot="public" static="no">
        <name>AESECB_OperationType</name>
        <enumvalue id="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af9c903637981109af6af15c94aaf36b5" prot="public">
          <name>AESECB_OPERATION_TYPE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af42ad89357fc2f25e83fb4d7033bc08a" prot="public">
          <name>AESECB_OPERATION_TYPE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the operation types supported by the driver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="400" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="400" bodyend="403"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" prot="public" static="no">
        <type><ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref> *</type>
        <definition>typedef AESECB_Config* AESECB_Handle</definition>
        <argsstring></argsstring>
        <name>AESECB_Handle</name>
        <briefdescription>
<para>A handle that is returned from an <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="327" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AESECB_CallbackFxn) (AESECB_Handle handle, int_fast16_t returnValue, AESECB_Operation *operation, AESECB_OperationType operationType)</definition>
        <argsstring>)(AESECB_Handle handle, int_fast16_t returnValue, AESECB_Operation *operation, AESECB_OperationType operationType)</argsstring>
        <name>AESECB_CallbackFxn</name>
        <briefdescription>
<para>The definition of a callback function used by the AESECB driver when used in <ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba945f7703e248cd2d0fc2a08077030e62" kindref="member">AESECB_RETURN_BEHAVIOR_CALLBACK</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the client that started the ECB operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The result of the CCM operation. May contain an error code. Informs the application of why the callback function was called.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an operation struct.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>This parameter determines which operation the callback refers to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="420" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_e_s_e_c_b_8h_1a7a7eab07a0ed40f1e9320f973a74fb8e" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref></type>
        <definition>const AESECB_Params AESECB_defaultParams</definition>
        <argsstring></argsstring>
        <name>AESECB_defaultParams</name>
        <briefdescription>
<para>Default <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="449" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_init</definition>
        <argsstring>(void)</argsstring>
        <name>AESECB_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the ECB module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The AESECB_config structure must exist and be persistent before this function can be called. This function must also be called before any other ECB driver APIs. This function call does not modify any peripheral registers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_Params_init</definition>
        <argsstring>(AESECB_Params *params)</argsstring>
        <name>AESECB_Params_init</name>
        <param>
          <type><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: returnBehavior = AESECB_RETURN_BEHAVIOR_BLOCKING callbackFxn = NULL timeout = SemaphoreP_WAIT_FOREVER custom = NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
        <definition>AESECB_Handle AESECB_open</definition>
        <argsstring>(uint_least8_t index, const AESECB_Params *params)</argsstring>
        <name>AESECB_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>This function opens a given ECB peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>ECB controller has been initialized using <ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical peripheral number for the ECB indexed into the AESECB_config table</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an parameter block, if NULL it will use default values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An AESECB_Handle on success or a NULL on an error or if it has been opened already.</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_close</definition>
        <argsstring>(AESECB_Handle handle)</argsstring>
        <name>AESECB_close</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close an ECB peripheral specified by the ECB handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> has to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="503" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESECB_Operation_init</definition>
        <argsstring>(AESECB_Operation *operationStruct)</argsstring>
        <name>AESECB_Operation_init</name>
        <param>
          <type><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> *</type>
          <declname>operationStruct</declname>
        </param>
        <briefdescription>
<para>Function to initialize an <ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operationStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to <ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are all zeros. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_oneStepEncrypt</definition>
        <argsstring>(AESECB_Handle handle, AESECB_Operation *operation)</argsstring>
        <name>AESECB_oneStepEncrypt</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> *</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESECB encryption operation in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted ciphertext or incorrect authentication.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> and <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a6dfa9afab09668259531f58273fa4e36" kindref="member">AESECB_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1ab8792e83e4a2350e94b1f2a32d4886a2" kindref="member">AESECB_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a5d09cd5661ac53f7ba3141e23fde65a6" kindref="member">AESECB_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a4c14a4a0b8bc8798e5280761c420aa6e" kindref="member">AESECB_STATUS_CANCELED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" kindref="member">AESECB_oneStepDecrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_oneStepDecrypt</definition>
        <argsstring>(AESECB_Handle handle, AESECB_Operation *operation)</argsstring>
        <name>AESECB_oneStepDecrypt</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> *</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESECB decryption in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted plaintext or incorrectly failed verification.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> and <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>An ECB handle returned from <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a6dfa9afab09668259531f58273fa4e36" kindref="member">AESECB_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1ab8792e83e4a2350e94b1f2a32d4886a2" kindref="member">AESECB_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a5d09cd5661ac53f7ba3141e23fde65a6" kindref="member">AESECB_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a4c14a4a0b8bc8798e5280761c420aa6e" kindref="member">AESECB_STATUS_CANCELED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" kindref="member">AESECB_oneStepEncrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1a95851e372c5fb57b80036034d0d829b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESECB_cancelOperation</definition>
        <argsstring>(AESECB_Handle handle)</argsstring>
        <name>AESECB_cancelOperation</name>
        <param>
          <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Cancels an ongoing AESECB operation. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000005"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function will be deprecated in the 3Q20 SDK release. The asynchronicity of the function can not be handled by all accellerators.</para></xrefdescription></xrefsect></para><para>Asynchronously cancels an AESECB operation. Only available when using AESECB_RETURN_BEHAVIOR_CALLBACK or AESECB_RETURN_BEHAVIOR_BLOCKING. The operation will terminate as though an error occured. The return status code of the operation will be AESECB_STATUS_CANCELED.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the operation to cancel</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1a6dfa9afab09668259531f58273fa4e36" kindref="member">AESECB_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_e_c_b_8h_1ab8792e83e4a2350e94b1f2a32d4886a2" kindref="member">AESECB_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was not canceled. There may be no operation to cancel. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="573" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_e_c_b_8h_1ad955dd76b7e143261e9727eeaddc7f96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref></type>
        <definition>AESECB_Handle AESECB_construct</definition>
        <argsstring>(AESECB_Config *config, const AESECB_Params *params)</argsstring>
        <name>AESECB_construct</name>
        <param>
          <type><ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Constructs a new AESECB object. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref>, <ref refid="_a_e_s_e_c_b_8h_1ad955dd76b7e143261e9727eeaddc7f96" kindref="member">AESECB_construct()</ref> does not require the hwAttrs and object to be allocated in a <ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref> array that is indexed into. Instead, the <ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref>, hwAttrs, and object can be allocated at any location. This allows for relatively simple run-time allocation of temporary driver instances on the stack or the heap. The drawback is that this makes it more difficult to write device-agnostic code. If you use an ifdef with DeviceFamily, you can choose the correct object and hwAttrs to allocate. That compilation unit will be tied to the device it was compiled for at this point. To change devices, recompilation of the application with a different DeviceFamily setting is necessary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref> describing the location of the object and hwAttrs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> to configure the driver instance.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a <ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref> on success or NULL on failure.</para></simplesect>
<simplesect kind="pre"><para>The object struct <computeroutput>config</computeroutput> points to must be zeroed out prior to calling this function. Otherwise, unexpected behavior may ensue. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h" line="598" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AESECB driver header. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><anchor id="_a_e_s_e_c_b_8h_1ti_drivers_AESECB_Overview"/><heading level="1">Overview</heading>
</para><para>The Electronic Code Book (ECB) mode of operation is a generic encryption block cipher mode. It can be used with any block cipher. AESECB encrypts or decrypts one or multiple blocks of plaintext or ciphertext using the Advanced Encryption Standard (AES) block cipher. Each input block is individually encrypted or decrypted. This means that blocks of ciphertext can be decrypted individually and out of order. Encrypting the same plaintext using the same key yields identical ciphertext. This raises several security issues. For this reason, it is not recommended that ECB be used unless interfacing with unupdatable legacy systems or where a standard specifies its use. Better alternatives would be an authenticated encryption with associated data (AEAD) mode such as CCM or GCM.</para><para>The AES key is a shared secret between the two parties and has a length of 128, 192, or 256 bits.</para><para><anchor id="_a_e_s_e_c_b_8h_1ti_drivers_AESECB_Usage"/><heading level="1">Usage</heading>
</para><para><heading level="2">Before starting an ECB operation</heading>
</para><para>Before starting an ECB operation, the application must do the following:<itemizedlist>
<listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init()</ref> to initialize the driver</para></listitem><listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init()</ref> to initialize the <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> to default values.</para></listitem><listitem><para>Modify the <ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref> as desired</para></listitem><listitem><para>Call <ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open()</ref> to open an instance of the driver</para></listitem><listitem><para>Initialize a <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. These opaque datastructures are representations of keying material and its storage. Depending on how the keying material is stored (RAM or flash, key store, key blob), the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> must be initialized differently. The AESECB API can handle all types of <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. However, not all device-specific implementions support all types of <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. Devices without a key store will not support CryptoKeys with keying material stored in a key store for example. All devices support plaintext CryptoKeys.</para></listitem><listitem><para>Initialize the <ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref> using <ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init()</ref> and set all length, key, and buffer fields.</para></listitem></itemizedlist>
</para><para><heading level="2">Starting an ECB operation</heading>
</para><para>The AESECB_oneStepEncrypt and AESECB_oneStepDecrypt functions do an ECB operation in a single call. They will always be the most highly optimized routines with the least overhead and the fastest runtime. Since ECB plaintext blocks are simply encrypted with the block cipher block by block, there is no difference in the ciphertext between encrypting two blocks in one go or encypting each block individually.</para><para><heading level="2">After the ECB operation completes</heading>
</para><para>After the ECB operation completes, the application should either start another operation or close the driver by calling <ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close()</ref></para><para><anchor id="_a_e_s_e_c_b_8h_1ti_drivers_AESECB_Synopsis"/><heading level="2">Synopsis</heading>
</para><para><anchor id="_a_e_s_e_c_b_8h_1ti_drivers_AESECB_Synopsis_Code"/><programlisting><codeline><highlight class="normal">//<sp/>Import<sp/>AESECB<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_init();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Define<sp/>name<sp/>for<sp/>AESECB<sp/>channel<sp/>index</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESECB_INSTANCE<sp/>0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESECB_open(AESECB_INSTANCE,<sp/>NULL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Initialize<sp/>symmetric<sp/>key</highlight></codeline>
<codeline><highlight class="normal">CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Set<sp/>up<sp/>AESECB_Operation</highlight></codeline>
<codeline><highlight class="normal">AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline><highlight class="normal">operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal">operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal">operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline><highlight class="normal">operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">encryptionResult<sp/>=<sp/>AESECB_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_close(handle);</highlight></codeline>
</programlisting></para><para><anchor id="_a_e_s_e_c_b_8h_1ti_drivers_AESECB_Examples"/> <heading level="2">Examples</heading>
</para><para>### Encyption of multiple plaintext blocks in blocking mode # <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/types/cryptoKey/CryptoKey_Plaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">int_fast16_t<sp/>encryptionResult;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[]<sp/>=<sp/>{0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xae,<sp/>0x2d,<sp/>0x8a,<sp/>0x57,<sp/>0x1e,<sp/>0x03,<sp/>0xac,<sp/>0x9c,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x9e,<sp/>0xb7,<sp/>0x6f,<sp/>0xac,<sp/>0x45,<sp/>0xaf,<sp/>0x8e,<sp/>0x51};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[sizof(plaintext)];</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[16]<sp/>=<sp/>{0x2b,<sp/>0x7e,<sp/>0x15,<sp/>0x16,<sp/>0x28,<sp/>0xae,<sp/>0xd2,<sp/>0xa6,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xab,<sp/>0xf7,<sp/>0x15,<sp/>0x88,<sp/>0x09,<sp/>0xcf,<sp/>0x4f,<sp/>0x3c}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESECB_open(0,<sp/>NULL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">encryptionResult<sp/>=<sp/>AESECB_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(encryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>resultant<sp/>ciphertext<sp/>should<sp/>be:</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0x3a,<sp/>0xd7,<sp/>0x7b,<sp/>0xb4,<sp/>0x0d,<sp/>0x7a,<sp/>0x36,<sp/>0x60,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xa8,<sp/>0x9e,<sp/>0xca,<sp/>0xf3,<sp/>0x24,<sp/>0x66,<sp/>0xef,<sp/>0x97,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xf5,<sp/>0xd3,<sp/>0xd5,<sp/>0x85,<sp/>0x03,<sp/>0xb9,<sp/>0x69,<sp/>0x9d,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xe7,<sp/>0x85,<sp/>0x89,<sp/>0x5a,<sp/>0x96,<sp/>0xfd,<sp/>0xba,<sp/>0xaf</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_close(handle);</highlight></codeline>
</programlisting></para><para><heading level="3">Single call ECB decryption in callback mode</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0xf3,<sp/>0xee,<sp/>0xd1,<sp/>0xbd,<sp/>0xb5,<sp/>0xd2,<sp/>0xa0,<sp/>0x3c,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x06,<sp/>0x4b,<sp/>0x5a,<sp/>0x7e,<sp/>0x3d,<sp/>0xb1,<sp/>0x81,<sp/>0xf8};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[32]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x60,<sp/>0x3d,<sp/>0xeb,<sp/>0x10,<sp/>0x15,<sp/>0xca,<sp/>0x71,<sp/>0xbe,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2b,<sp/>0x73,<sp/>0xae,<sp/>0xf0,<sp/>0x85,<sp/>0x7d,<sp/>0x77,<sp/>0x81,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f,<sp/>0x35,<sp/>0x2c,<sp/>0x07,<sp/>0x3b,<sp/>0x61,<sp/>0x08,<sp/>0xd7,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2d,<sp/>0x98,<sp/>0x10,<sp/>0xa3,<sp/>0x09,<sp/>0x14,<sp/>0xdf,<sp/>0xf4};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[sizeof(ciphertext)];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>plaintext<sp/>should<sp/>be<sp/>the<sp/>following<sp/>after<sp/>the<sp/>decryption<sp/>operation:</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>ecbCallback(AESECB_Handle<sp/>handle,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>*operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_OperationType<sp/>operationType)<sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(returnValue<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>ecbStartFunction(void)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Params<sp/>params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>decryptionResult;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.returnBehavior<sp/>=<sp/>AESECB_RETURN_BEHAVIOR_CALLBACK;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>ecbCallback;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESECB_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>decryptionResult<sp/>=<sp/>AESECB_oneStepDecrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(decryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>other<sp/>things<sp/>while<sp/>ECB<sp/>operation<sp/>completes<sp/>in<sp/>the<sp/>background</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2020,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>AESECB<sp/>driver<sp/>header</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_AESECB_Overview</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Electronic<sp/>Code<sp/>Book<sp/>(ECB)<sp/>mode<sp/>of<sp/>operation<sp/>is<sp/>a<sp/>generic</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>encryption<sp/>block<sp/>cipher<sp/>mode.<sp/>It<sp/>can<sp/>be<sp/>used<sp/>with<sp/>any<sp/>block<sp/>cipher.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>AESECB<sp/>encrypts<sp/>or<sp/>decrypts<sp/>one<sp/>or<sp/>multiple<sp/>blocks<sp/>of<sp/>plaintext<sp/>or<sp/>ciphertext</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>using<sp/>the<sp/>Advanced<sp/>Encryption<sp/>Standard<sp/>(AES)<sp/>block<sp/>cipher.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>Each<sp/>input<sp/>block<sp/>is<sp/>individually<sp/>encrypted<sp/>or<sp/>decrypted.<sp/>This<sp/>means<sp/>that</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>blocks<sp/>of<sp/>ciphertext<sp/>can<sp/>be<sp/>decrypted<sp/>individually<sp/>and<sp/>out<sp/>of<sp/>order.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>Encrypting<sp/>the<sp/>same<sp/>plaintext<sp/>using<sp/>the<sp/>same<sp/>key<sp/>yields<sp/>identical<sp/>ciphertext.</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>raises<sp/>several<sp/>security<sp/>issues.<sp/>For<sp/>this<sp/>reason,<sp/>it<sp/>is<sp/>not<sp/>recommended</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>ECB<sp/>be<sp/>used<sp/>unless<sp/>interfacing<sp/>with<sp/>unupdatable<sp/>legacy<sp/>systems</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>or<sp/>where<sp/>a<sp/>standard<sp/>specifies<sp/>its<sp/>use.<sp/>Better<sp/>alternatives<sp/>would<sp/>be<sp/>an</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>authenticated<sp/>encryption<sp/>with<sp/>associated<sp/>data<sp/>(AEAD)<sp/>mode<sp/>such<sp/>as</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>CCM<sp/>or<sp/>GCM.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>AES<sp/>key<sp/>is<sp/>a<sp/>shared<sp/>secret<sp/>between<sp/>the<sp/>two<sp/>parties<sp/>and<sp/>has<sp/>a<sp/>length</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>128,<sp/>192,<sp/>or<sp/>256<sp/>bits.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_AESECB_Usage</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Usage<sp/>#</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Before<sp/>starting<sp/>an<sp/>ECB<sp/>operation<sp/>#</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>Before<sp/>starting<sp/>an<sp/>ECB<sp/>operation,<sp/>the<sp/>application<sp/>must<sp/>do<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESECB_init()<sp/>to<sp/>initialize<sp/>the<sp/>driver</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESECB_Params_init()<sp/>to<sp/>initialize<sp/>the<sp/>AESECB_Params<sp/>to<sp/>default<sp/>values.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Modify<sp/>the<sp/>AESECB_Params<sp/>as<sp/>desired</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESECB_open()<sp/>to<sp/>open<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>driver</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Initialize<sp/>a<sp/>CryptoKey.<sp/>These<sp/>opaque<sp/>datastructures<sp/>are<sp/>representations</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>keying<sp/>material<sp/>and<sp/>its<sp/>storage.<sp/>Depending<sp/>on<sp/>how<sp/>the<sp/>keying<sp/>material</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>stored<sp/>(RAM<sp/>or<sp/>flash,<sp/>key<sp/>store,<sp/>key<sp/>blob),<sp/>the<sp/>CryptoKey<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>differently.<sp/>The<sp/>AESECB<sp/>API<sp/>can<sp/>handle<sp/>all<sp/>types<sp/>of<sp/>CryptoKey.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>not<sp/>all<sp/>device-specific<sp/>implementions<sp/>support<sp/>all<sp/>types<sp/>of<sp/>CryptoKey.</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Devices<sp/>without<sp/>a<sp/>key<sp/>store<sp/>will<sp/>not<sp/>support<sp/>CryptoKeys<sp/>with<sp/>keying<sp/>material</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>a<sp/>key<sp/>store<sp/>for<sp/>example.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>devices<sp/>support<sp/>plaintext<sp/>CryptoKeys.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>Initialize<sp/>the<sp/>AESECB_Operation<sp/>using<sp/>AESECB_Operation_init()<sp/>and<sp/>set<sp/>all</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>key,<sp/>and<sp/>buffer<sp/>fields.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Starting<sp/>an<sp/>ECB<sp/>operation<sp/>#</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>AESECB_oneStepEncrypt<sp/>and<sp/>AESECB_oneStepDecrypt<sp/>functions<sp/>do<sp/>an<sp/>ECB<sp/>operation<sp/>in<sp/>a<sp/>single<sp/>call.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>They<sp/>will<sp/>always<sp/>be<sp/>the<sp/>most<sp/>highly<sp/>optimized<sp/>routines<sp/>with<sp/>the<sp/>least<sp/>overhead<sp/>and<sp/>the<sp/>fastest</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/>runtime.<sp/>Since<sp/>ECB<sp/>plaintext<sp/>blocks<sp/>are<sp/>simply<sp/>encrypted<sp/>with<sp/>the<sp/>block<sp/>cipher<sp/>block<sp/>by<sp/>block,</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>there<sp/>is<sp/>no<sp/>difference<sp/>in<sp/>the<sp/>ciphertext<sp/>between<sp/>encrypting<sp/>two<sp/>blocks<sp/>in<sp/>one<sp/>go<sp/>or<sp/>encypting</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>each<sp/>block<sp/>individually.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>After<sp/>the<sp/>ECB<sp/>operation<sp/>completes<sp/>#</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>After<sp/>the<sp/>ECB<sp/>operation<sp/>completes,<sp/>the<sp/>application<sp/>should<sp/>either<sp/>start<sp/>another<sp/>operation</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>or<sp/>close<sp/>the<sp/>driver<sp/>by<sp/>calling<sp/>AESECB_close()</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_AESECB_Synopsis</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Synopsis</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_AESECB_Synopsis_Code</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>Import<sp/>AESECB<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_init();</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>Define<sp/>name<sp/>for<sp/>AESECB<sp/>channel<sp/>index</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>#define<sp/>AESECB_INSTANCE<sp/>0</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>AESECB_open(AESECB_INSTANCE,<sp/>NULL);</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>Initialize<sp/>symmetric<sp/>key</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>Set<sp/>up<sp/>AESECB_Operation</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/>operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/>encryptionResult<sp/>=<sp/>AESECB_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_close(handle);</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_AESECB_Examples</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Examples</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Encyption<sp/>of<sp/>multiple<sp/>plaintext<sp/>blocks<sp/>in<sp/>blocking<sp/>mode<sp/>#</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/types/cryptoKey/CryptoKey_Plaintext.h&gt;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/>...</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/>int_fast16_t<sp/>encryptionResult;</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>plaintext[]<sp/>=<sp/>{0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xae,<sp/>0x2d,<sp/>0x8a,<sp/>0x57,<sp/>0x1e,<sp/>0x03,<sp/>0xac,<sp/>0x9c,</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x9e,<sp/>0xb7,<sp/>0x6f,<sp/>0xac,<sp/>0x45,<sp/>0xaf,<sp/>0x8e,<sp/>0x51};</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>ciphertext[sizof(plaintext)];</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>keyingMaterial[16]<sp/>=<sp/>{0x2b,<sp/>0x7e,<sp/>0x15,<sp/>0x16,<sp/>0x28,<sp/>0xae,<sp/>0xd2,<sp/>0xa6,</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xab,<sp/>0xf7,<sp/>0x15,<sp/>0x88,<sp/>0x09,<sp/>0xcf,<sp/>0x4f,<sp/>0x3c}</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/>handle<sp/>=<sp/>AESECB_open(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/>encryptionResult<sp/>=<sp/>AESECB_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(encryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>The<sp/>resultant<sp/>ciphertext<sp/>should<sp/>be:</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0x3a,<sp/>0xd7,<sp/>0x7b,<sp/>0xb4,<sp/>0x0d,<sp/>0x7a,<sp/>0x36,<sp/>0x60,</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0xa8,<sp/>0x9e,<sp/>0xca,<sp/>0xf3,<sp/>0x24,<sp/>0x66,<sp/>0xef,<sp/>0x97,</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0xf5,<sp/>0xd3,<sp/>0xd5,<sp/>0x85,<sp/>0x03,<sp/>0xb9,<sp/>0x69,<sp/>0x9d,</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0xe7,<sp/>0x85,<sp/>0x89,<sp/>0x5a,<sp/>0x96,<sp/>0xfd,<sp/>0xba,<sp/>0xaf</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_close(handle);</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/>###<sp/>Single<sp/>call<sp/>ECB<sp/>decryption<sp/>in<sp/>callback<sp/>mode<sp/>#</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/AESECB.h&gt;</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/><sp/>...</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>ciphertext[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0xf3,<sp/>0xee,<sp/>0xd1,<sp/>0xbd,<sp/>0xb5,<sp/>0xd2,<sp/>0xa0,<sp/>0x3c,</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x06,<sp/>0x4b,<sp/>0x5a,<sp/>0x7e,<sp/>0x3d,<sp/>0xb1,<sp/>0x81,<sp/>0xf8};</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>keyingMaterial[32]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x60,<sp/>0x3d,<sp/>0xeb,<sp/>0x10,<sp/>0x15,<sp/>0xca,<sp/>0x71,<sp/>0xbe,</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2b,<sp/>0x73,<sp/>0xae,<sp/>0xf0,<sp/>0x85,<sp/>0x7d,<sp/>0x77,<sp/>0x81,</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x1f,<sp/>0x35,<sp/>0x2c,<sp/>0x07,<sp/>0x3b,<sp/>0x61,<sp/>0x08,<sp/>0xd7,</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x2d,<sp/>0x98,<sp/>0x10,<sp/>0xa3,<sp/>0x09,<sp/>0x14,<sp/>0xdf,<sp/>0xf4};</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/><sp/>uint8_t<sp/>plaintext[sizeof(ciphertext)];</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>The<sp/>plaintext<sp/>should<sp/>be<sp/>the<sp/>following<sp/>after<sp/>the<sp/>decryption<sp/>operation:</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0x6b,<sp/>0xc1,<sp/>0xbe,<sp/>0xe2,<sp/>0x2e,<sp/>0x40,<sp/>0x9f,<sp/>0x96,</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>0xe9,<sp/>0x3d,<sp/>0x7e,<sp/>0x11,<sp/>0x73,<sp/>0x93,<sp/>0x17,<sp/>0x2a,</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/>void<sp/>ecbCallback(AESECB_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation<sp/>*operation,</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESECB_OperationType<sp/>operationType)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(returnValue<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/><sp/>AESECB_Operation<sp/>operation;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/><sp/>void<sp/>ecbStartFunction(void)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Params<sp/>params;</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>decryptionResult;</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>params.returnBehavior<sp/>=<sp/>AESECB_RETURN_BEHAVIOR_CALLBACK;</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>ecbCallback;</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESECB_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>AESECB_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>decryptionResult<sp/>=<sp/>AESECB_oneStepDecrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(decryptionResult<sp/>!=<sp/>AESECB_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>do<sp/>other<sp/>things<sp/>while<sp/>ECB<sp/>operation<sp/>completes<sp/>in<sp/>the<sp/>background</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_AESECB__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_AESECB__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_crypto_key_8h" kindref="compound">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="_a_e_s_e_c_b_8h_1a5d1005b6b5eed999a82f89f282bf384f" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="_a_e_s_e_c_b_8h_1a6dfa9afab09668259531f58273fa4e36" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="_a_e_s_e_c_b_8h_1ab8792e83e4a2350e94b1f2a32d4886a2" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="_a_e_s_e_c_b_8h_1a5d09cd5661ac53f7ba3141e23fde65a6" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_RESOURCE_UNAVAILABLE<sp/>(-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="_a_e_s_e_c_b_8h_1a4c14a4a0b8bc8798e5280761c420aa6e" refkind="member"><highlight class="preprocessor">#define<sp/>AESECB_STATUS_CANCELED<sp/>(-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="struct_a_e_s_e_c_b___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="318" refid="struct_a_e_s_e_c_b___config_1aa78326b0c81ee153c28fbb2e0373f7e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___config_1aa78326b0c81ee153c28fbb2e0373f7e1" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="struct_a_e_s_e_c_b___config_1a861e05daf7efe0f93ba7487087f5cf23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_e_c_b___config_1a861e05daf7efe0f93ba7487087f5cf23" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref><sp/>*<ref refid="_a_e_s_e_c_b_8h_1a8710c81972bad12cba1406672e941a99" kindref="member">AESECB_Handle</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfb" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="351" refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba945f7703e248cd2d0fc2a08077030e62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba945f7703e248cd2d0fc2a08077030e62" kindref="member">AESECB_RETURN_BEHAVIOR_CALLBACK</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="357" refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba09c85edf8278d95609ef9cda74e21640" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba09c85edf8278d95609ef9cda74e21640" kindref="member">AESECB_RETURN_BEHAVIOR_BLOCKING</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="361" refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba8fb6022bf8730ca0f113fe339b3cf0d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfba8fb6022bf8730ca0f113fe339b3cf0d3" kindref="member">AESECB_RETURN_BEHAVIOR_POLLING</ref><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfb" kindref="member">AESECB_ReturnBehavior</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="371" refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a444b0bc4a6fa39374155fc2f67fc6a94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a444b0bc4a6fa39374155fc2f67fc6a94" kindref="member">AESECB_MODE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="372" refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a2957e9be6c5c1ce87d927609ce47fb6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5a2957e9be6c5c1ce87d927609ce47fb6d" kindref="member">AESECB_MODE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1a15ba34a139e3ccb671675ff1f8cd42a5" kindref="member">AESECB_Mode</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="struct_a_e_s_e_c_b___operation" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="380" refid="struct_a_e_s_e_c_b___operation_1a258415f93c83d15a98a5ec5c3feae99a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation_1a258415f93c83d15a98a5ec5c3feae99a" kindref="member">key</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="381" refid="struct_a_e_s_e_c_b___operation_1a9fb8baa5286ec0170a59f3bed4711d8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation_1a9fb8baa5286ec0170a59f3bed4711d8f" kindref="member">input</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="386" refid="struct_a_e_s_e_c_b___operation_1a595df29ab261c730d9b754d6094d2cca" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___operation_1a595df29ab261c730d9b754d6094d2cca" kindref="member">output</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="392" refid="struct_a_e_s_e_c_b___operation_1a0e9b331f9e5717b30d7f1c1ab5f6e5eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___operation_1a0e9b331f9e5717b30d7f1c1ab5f6e5eb" kindref="member">inputLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="400" refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="401" refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af9c903637981109af6af15c94aaf36b5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af9c903637981109af6af15c94aaf36b5" kindref="member">AESECB_OPERATION_TYPE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="402" refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af42ad89357fc2f25e83fb4d7033bc08a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8af42ad89357fc2f25e83fb4d7033bc08a" kindref="member">AESECB_OPERATION_TYPE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}<sp/><ref refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8" kindref="member">AESECB_OperationType</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" kindref="member">AESECB_CallbackFxn</ref>)<sp/>(AESECB_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref><sp/>*operation,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1aba58ffed04918dd60cf61212e2adb8d8" kindref="member">AESECB_OperationType</ref><sp/>operationType);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="struct_a_e_s_e_c_b___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="434" refid="struct_a_e_s_e_c_b___params_1ad6c435bf9cf2abb95843e6f9ea5cc2f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1abc07192814983f78a08af0f306959bfb" kindref="member">AESECB_ReturnBehavior</ref><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params_1ad6c435bf9cf2abb95843e6f9ea5cc2f1" kindref="member">returnBehavior</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435" refid="struct_a_e_s_e_c_b___params_1accb51f8c4fe514c37e5b52e2479419b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_e_c_b_8h_1a2017e1521b3eeb49c8917dbe1dabf953" kindref="member">AESECB_CallbackFxn</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params_1accb51f8c4fe514c37e5b52e2479419b4" kindref="member">callbackFxn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436" refid="struct_a_e_s_e_c_b___params_1a19e205228e80eb89aa08dbb19a2644cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_e_c_b___params_1a19e205228e80eb89aa08dbb19a2644cd" kindref="member">timeout</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439" refid="struct_a_e_s_e_c_b___params_1aecdbb22a75145d86508eb3550c021ffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_e_c_b___params_1aecdbb22a75145d86508eb3550c021ffb" kindref="member">custom</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="442"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref><sp/><ref refid="_a_e_s_e_c_b_8h_1a7a7eab07a0ed40f1e9320f973a74fb8e" kindref="member">AESECB_defaultParams</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a4f4274c6aa928e8e10d3e516e73f77ea" kindref="member">AESECB_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1ab200c39cb5a9cc537a9a6047c89d5651" kindref="member">AESECB_Params_init</ref>(<ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal">AESECB_Handle<sp/><ref refid="_a_e_s_e_c_b_8h_1a970d834b0e1987baa609cb9498a67a0d" kindref="member">AESECB_open</ref>(uint_least8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a55c096b42583d88be9f044dcffad64a8" kindref="member">AESECB_close</ref>(AESECB_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_e_c_b_8h_1a44a248dfcc9794b28a2eb8eb5570af2d" kindref="member">AESECB_Operation_init</ref>(<ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref><sp/>*operationStruct);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1a8b760e2e52d714c3fb8faf74feb38b3a" kindref="member">AESECB_oneStepEncrypt</ref>(AESECB_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref><sp/>*operation);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1abdd64e5e2b446ef0b884f9d3862d0463" kindref="member">AESECB_oneStepDecrypt</ref>(AESECB_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_e_c_b___operation" kindref="compound">AESECB_Operation</ref><sp/>*operation);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_e_c_b_8h_1a95851e372c5fb57b80036034d0d829b8" kindref="member">AESECB_cancelOperation</ref>(AESECB_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal">AESECB_Handle<sp/><ref refid="_a_e_s_e_c_b_8h_1ad955dd76b7e143261e9727eeaddc7f96" kindref="member">AESECB_construct</ref>(<ref refid="struct_a_e_s_e_c_b___config" kindref="compound">AESECB_Config</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_e_c_b___params" kindref="compound">AESECB_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_AESECB__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESECB.h"/>
  </compounddef>
</doxygen>

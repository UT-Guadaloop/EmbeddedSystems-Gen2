<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_comparator_8h" kind="file" language="C++">
    <compoundname>Comparator.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="148">
        <label>stdint.h</label>
      </node>
      <node id="147">
        <label>Comparator.h</label>
        <link refid="_comparator_8h"/>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_comparator___params" prot="public">Comparator_Params</innerclass>
    <innerclass refid="struct_comparator___fxn_table" prot="public">Comparator_FxnTable</innerclass>
    <innerclass refid="struct_comparator___config__" prot="public">Comparator_Config_</innerclass>
      <sectiondef kind="user-defined">
      <memberdef kind="define" id="group___comparator___e_v_e_n_t_1gac1d081287a8640d0307a987a09431729" prot="public" static="no">
        <name>Comparator_EVENT_OUTPUT_TRIGGERED</name>
        <initializer>(1)</initializer>
        <briefdescription>
<para>The comparator output triggered in the positive direction. </para>        </briefdescription>
        <detaileddescription>
<para>Callback function called with Comparator_EVENT_OUTPUT_TRIGGERED if the comparator triggered in the positive direction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="272" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___comparator___e_v_e_n_t_1gaaf043320bc3b3ad577b2c65cbc9110d8" prot="public" static="no">
        <name>Comparator_EVENT_OUTPUT_INVERTED_TRIGGERED</name>
        <initializer>(2)</initializer>
        <briefdescription>
<para>The comparator output triggered in the inverted direction. </para>        </briefdescription>
        <detaileddescription>
<para>Callback function called with Comparator_EVENT_OUTPUT_INVERTED_TRIGGERED if the comparator triggered in the negative direction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="280" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___comparator___e_v_e_n_t_1ga8ce8f582a8f76f4a9bd43554696aa719" prot="public" static="no">
        <name>Comparator_EVENT_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>An error occurred with the underlying comparator driver. </para>        </briefdescription>
        <detaileddescription>
<para>Callback function called with Comparator_EVENT_ERROR if an error happened in the operation of the driver. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="288" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___comparator___s_t_a_t_u_s_1ga68011e3a7d13a44198f06cb33529ab68" prot="public" static="no">
        <name>Comparator_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Comparator_control status code reservation offset. Comparator driver implementations should offset status codes with Comparator_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>ComparatorXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/><sp/>Comparator_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ComparatorXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/><sp/>Comparator_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="230" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___comparator___s_t_a_t_u_s_1ga2ea4eb65981e702408d21dc3fba3aea8" prot="public" static="no">
        <name>Comparator_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="236" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___comparator___s_t_a_t_u_s_1ga2d11038df9bd06ec24930e1c17e53840" prot="public" static="no">
        <name>Comparator_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="242" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___comparator___e_v_e_n_t_1ga8eee3343a2691d8dbf963301c68f9aac" prot="public" static="no">
        <name>Comparator_EVENT_RESERVED</name>
        <initializer>(32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common Comparator event code reservation offset. Comparator driver implementations should offset event codes with Comparator_EVENT_RESERVED growing positively.</para><para>Example implementation specific event codes: <programlisting><codeline><highlight class="normal">#define<sp/>ComparatorXYZ_EVENT_EVENT0<sp/><sp/><sp/>Comparator_EVENT_RESERVED<sp/>+<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>ComparatorXYZ_EVENT_EVENT1<sp/><sp/><sp/>Comparator_EVENT_RESERVED<sp/>+<sp/>1</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="262" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01" prot="public" static="no">
        <name>Comparator_OutputPolarity</name>
        <enumvalue id="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01a5e62c1e9bfcf4c8d73d71721a8cf6db6" prot="public">
          <name>Comparator_OUTPUT_NORMAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparator output is normal (output logical one when the positive input terminal is more positive than the negative input terminal) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01af672c9469da6556a02a37bed09934f85" prot="public">
          <name>Comparator_OUTPUT_INVERTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Comparator output is normal (output logical zero when the positive input terminal is more positive than the negative input terminal) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Comparator Output Polarity. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the polarity of the comparator output (inverted/normal) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="306" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="305" bodyend="315"/>
      </memberdef>
      <memberdef kind="enum" id="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6" prot="public" static="no">
        <name>Comparator_OutputLevel</name>
        <enumvalue id="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6a502bb09684d685c56549c55ed4905508" prot="public">
          <name>Comparator_OUTPUT_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Positive input terminal is more positive than the negative input terminal </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6aa3c5bb26cda817e957685b47f38e17bb" prot="public">
          <name>Comparator_OUTPUT_LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Negative input terminal is more positive than the positive input terminal </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6ac6c7cc1e84a45f6f41e9725720a654c9" prot="public">
          <name>Comparator_OUTPUT_NOT_AVAILABLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Output level cannot be determined (possibly due to error or it not being ready) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Comparator Output Level. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the level of the output. This level has a direct correlation to the by the outputPolarity parameter passed into the <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> while opening the device with <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="326" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="325" bodyend="336"/>
      </memberdef>
      <memberdef kind="enum" id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238" prot="public" static="no">
        <name>Comparator_InterruptLevel</name>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a88387611ccc7ccb2aba98953a3885012" prot="public">
          <name>Comparator_INTERRUPT_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The comparator module should not trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ae9628e157dddfce101336b8f098ca40f" prot="public">
          <name>Comparator_INTERRUPT_RISING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A rising edge on the comparator output will trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238af5e853aab6523ab20936cf4a7cf0ada6" prot="public">
          <name>Comparator_INTERRUPT_FALLING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A falling edge on the comparator output will trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a18d8f0891a5bb8d7efb38613ad64ea18" prot="public">
          <name>Comparator_INTERRUPT_BOTH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Either a rising or falling edge on the comparator output will trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ac2c88bf535ec54acd149a887cbe9d47d" prot="public">
          <name>Comparator_INTERRUPT_HIGH</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A high comparator output will trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ad67ca5a31e5886f4f057663bc6b5e6a5" prot="public">
          <name>Comparator_INTERRUPT_LOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>A low comparator output will trigger an interrupt </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Comparator Interrupt Level. </para>        </briefdescription>
        <detaileddescription>
<para>This enum defines the comparator output condition that will trigger an interrupt. Not all output conditions are supported on all devices, refer to the device documentation to see which interrupt levels are supported. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="346" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="345" bodyend="360"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" prot="public" static="no">
        <type>struct <ref refid="struct_comparator___config__" kindref="compound">Comparator_Config_</ref> *</type>
        <definition>typedef struct Comparator_Config_* Comparator_Handle</definition>
        <argsstring></argsstring>
        <name>Comparator_Handle</name>
        <briefdescription>
<para>A handle that is returned from a <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="297" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1aa0647f68f02d466e5e9981bbdbb8a829" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Comparator_CallBackFxn) (Comparator_Handle handle, int_fast16_t status)</definition>
        <argsstring>)(Comparator_Handle handle, int_fast16_t status)</argsstring>
        <name>Comparator_CallBackFxn</name>
        <briefdescription>
<para>Comparator callback function. </para>        </briefdescription>
        <detaileddescription>
<para>Callback from the Comparator driver. This will be called when the driver is setup with a callback function pointer provided to the <ref refid="struct_comparator___params_1a3489bd7ec8306583b38fe521dedbf676" kindref="member">Comparator_Params.callbackFxn</ref> parameter and is used to communicate events and errors to the calling application.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">handle</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">status</parametername>
</parameternamelist>
<parameterdescription>
<para>Status of the comparator driver during an interrupt </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="375" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1adc116d03196b3bf1be891115401e0aa2" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Comparator_CloseFxn) (Comparator_Handle handle)</definition>
        <argsstring>)(Comparator_Handle handle)</argsstring>
        <name>Comparator_CloseFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a8862b12656bc855b405fdfe6db4ea763" kindref="member">Comparator_close()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="402" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1aebb8a944da4f9d7b63f7c4ab71eeedb9" prot="public" static="no">
        <type>uint32_t(*</type>
        <definition>typedef uint32_t(* Comparator_GetLevelFxn) (Comparator_Handle handle)</definition>
        <argsstring>)(Comparator_Handle handle)</argsstring>
        <name>Comparator_GetLevelFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" kindref="member">Comparator_getLevel()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="408" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1ab03d85bccb1914cc6eda1f336f679369" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Comparator_InitFxn) (Comparator_Handle handle)</definition>
        <argsstring>)(Comparator_Handle handle)</argsstring>
        <name>Comparator_InitFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" kindref="member">Comparator_init()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="414" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="414" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1aa9b4e369b6c8fd4e71d7570fd270fa18" prot="public" static="no">
        <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref>(*</type>
        <definition>typedef Comparator_Handle(* Comparator_OpenFxn) (Comparator_Handle handle, Comparator_Params *params)</definition>
        <argsstring>)(Comparator_Handle handle, Comparator_Params *params)</argsstring>
        <name>Comparator_OpenFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="420" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1a3fddecb5728e399b68ae781e32c7b14a" prot="public" static="no">
        <type>int_fast16_t(*</type>
        <definition>typedef int_fast16_t(* Comparator_StartFxn) (Comparator_Handle handle)</definition>
        <argsstring>)(Comparator_Handle handle)</argsstring>
        <name>Comparator_StartFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" kindref="member">Comparator_start()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="427" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1a2d6c5d635cfa4720ba38ed7cb65c6a1a" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* Comparator_StopFxn) (Comparator_Handle handle)</definition>
        <argsstring>)(Comparator_Handle handle)</argsstring>
        <name>Comparator_StopFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1aa510c5e76f01457177efa49232b3fc17" kindref="member">Comparator_stop()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="433" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1a62512b8db52de47975fe8d41374017f5" prot="public" static="no">
        <type>int_fast16_t(*</type>
        <definition>typedef int_fast16_t(* Comparator_GetParamsFxn) (Comparator_Handle handle, Comparator_Params *params)</definition>
        <argsstring>)(Comparator_Handle handle, Comparator_Params *params)</argsstring>
        <name>Comparator_GetParamsFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a79b406c4e5ef937764aae2c7833c9da5" kindref="member">Comparator_getParams()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="439" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1a4193f0b3b62fa9f4dda4d126f9ef63ed" prot="public" static="no">
        <type>int_fast16_t(*</type>
        <definition>typedef int_fast16_t(* Comparator_SetParamsFxn) (Comparator_Handle handle, Comparator_Params *params)</definition>
        <argsstring>)(Comparator_Handle handle, Comparator_Params *params)</argsstring>
        <name>Comparator_SetParamsFxn</name>
        <briefdescription>
<para>A function pointer to a driver specific implementation of <ref refid="_comparator_8h_1a6b2436fc8253844b8f82206912572c8a" kindref="member">Comparator_setParams()</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="446" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" bodystart="446" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_comparator_8h_1af0b6e9554dc935a9c4ac1481f7579136" prot="public" static="no">
        <type>struct <ref refid="struct_comparator___config__" kindref="compound">Comparator_Config_</ref></type>
        <definition>typedef struct Comparator_Config_  Comparator_Config</definition>
        <argsstring></argsstring>
        <name>Comparator_Config</name>
        <briefdescription>
<para>Comparator driver&apos;s custom <ref refid="index_1driver_configuration" kindref="member">configuration</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" kindref="member">Comparator_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="499" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_comparator_8h_1a8862b12656bc855b405fdfe6db4ea763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Comparator_close</definition>
        <argsstring>(Comparator_Handle handle)</argsstring>
        <name>Comparator_close</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close a Comparator driver instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="510" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1abd6c0aff8b4431b915c1f06961055d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Comparator_control</definition>
        <argsstring>(Comparator_Handle handle, uint_fast16_t cmd, void *arg)</argsstring>
        <name>Comparator_control</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type>uint_fast16_t</type>
          <declname>cmd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
<para>Function performs implementation specific features on a given <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">cmd</parametername>
</parameternamelist>
<parameterdescription>
<para>A command value defined by the driver specific implementation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">arg</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an optional R/W (read/write) argument that is accompanied with cmd.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Implementation specific return codes. Negative values indicate unsuccessful operations. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="527" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6" kindref="member">Comparator_OutputLevel</ref></type>
        <definition>Comparator_OutputLevel Comparator_getLevel</definition>
        <argsstring>(Comparator_Handle handle)</argsstring>
        <name>Comparator_getLevel</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function returns the level of the comparator output. The output level correlates to the polarity specified by the parameter passed into the <ref refid="struct_comparator___params_1ae8e6e23c4893c9a6206a022cac693c78" kindref="member">Comparator_Params.outputPolarity</ref> parameter while opening the device with <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> and <ref refid="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" kindref="member">Comparator_start()</ref> have been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Comparator handle returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value of type <ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6" kindref="member">Comparator_OutputLevel</ref> describing the output state of the comparator peripheral.</para></simplesect>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" kindref="member">Comparator_start()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Comparator_init</definition>
        <argsstring>(void)</argsstring>
        <name>Comparator_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Function to initialize the Comparator driver. </para>        </briefdescription>
        <detaileddescription>
<para>This function must also be called before any other Comparator driver APIs. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
        <definition>Comparator_Handle Comparator_open</definition>
        <argsstring>(uint32_t index, Comparator_Params *params)</argsstring>
        <name>Comparator_open</name>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the Comparator peripheral. </para>        </briefdescription>
        <detaileddescription>
<para>Function to initialize the Comparator peripheral specified by the particular index value.</para><para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" kindref="member">Comparator_init()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index in the <computeroutput>Comparator_Config</computeroutput>[] array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an initialized <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> structure. If NULL, the default <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> values are used.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> on success or NULL on an error.</para></simplesect>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" kindref="member">Comparator_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a8862b12656bc855b405fdfe6db4ea763" kindref="member">Comparator_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a564d4e90c709868465292753b88508f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Comparator_Params_init</definition>
        <argsstring>(Comparator_Params *params)</argsstring>
        <name>Comparator_Params_init</name>
        <param>
          <type><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> structure to its default values. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> structure for initialization.</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: <itemizedlist>
<listitem><para><ref refid="struct_comparator___params_1a3489bd7ec8306583b38fe521dedbf676" kindref="member">Comparator_Params.callbackFxn</ref> = NULL </para></listitem>
<listitem><para><ref refid="struct_comparator___params_1ae8e6e23c4893c9a6206a022cac693c78" kindref="member">Comparator_Params.outputPolarity</ref> = Comparator_OUTPUT_NORMAL </para></listitem>
</itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="588" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Comparator_start</definition>
        <argsstring>(Comparator_Handle handle)</argsstring>
        <name>Comparator_start</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to start the comparator instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2ea4eb65981e702408d21dc3fba3aea8" kindref="member">Comparator_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The comparator successfully started. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2d11038df9bd06ec24930e1c17e53840" kindref="member">Comparator_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The comparator failed to start.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_comparator_8h_1aa510c5e76f01457177efa49232b3fc17" kindref="member">Comparator_stop()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="602" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1aa510c5e76f01457177efa49232b3fc17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Comparator_stop</definition>
        <argsstring>(Comparator_Handle handle)</argsstring>
        <name>Comparator_stop</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to stop a comparator instance. If the comparator instance is already stopped this function has no effect. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" kindref="member">Comparator_start()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a79b406c4e5ef937764aae2c7833c9da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Comparator_getParams</definition>
        <argsstring>(Comparator_Handle handle, Comparator_Params *params)</argsstring>
        <name>Comparator_getParams</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to get the parameters of a comparator instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> structure to be filled with the current comparator settings.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2ea4eb65981e702408d21dc3fba3aea8" kindref="member">Comparator_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The params were obtained successfully. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2d11038df9bd06ec24930e1c17e53840" kindref="member">Comparator_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The params were unable to be obtained.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a79b406c4e5ef937764aae2c7833c9da5" kindref="member">Comparator_getParams()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_comparator_8h_1a6b2436fc8253844b8f82206912572c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t Comparator_setParams</definition>
        <argsstring>(Comparator_Handle handle, Comparator_Params *params)</argsstring>
        <name>Comparator_setParams</name>
        <param>
          <type><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to get the parameters of a comparator instance. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref> has been called</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref> returned from <ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open()</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">params</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a <ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref> structure holding the new comparator settings.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2ea4eb65981e702408d21dc3fba3aea8" kindref="member">Comparator_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The params were set successfully. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="group___comparator___s_t_a_t_u_s_1ga2d11038df9bd06ec24930e1c17e53840" kindref="member">Comparator_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The params were unable to be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_comparator_8h_1a6b2436fc8253844b8f82206912572c8a" kindref="member">Comparator_setParams()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h" line="648" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><bold>PRELIMINARY</bold> Comparator Driver Interface </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><bold>WARNING</bold> These APIs are <bold>PRELIMINARY</bold>, and subject to change in the next few months.</para><para><anchor id="_comparator_8h_1ti_drivers_Comparator_Overview"/><heading level="1">Overview</heading>
</para><para>The Comparator driver serves as the main interface for a typical RTOS application. Its purpose is to redirect the Comparator APIs to device specific implementations which are specified using a pointer to a <ref refid="struct_comparator___fxn_table" kindref="compound">Comparator_FxnTable</ref>. The device specific implementations are responsible for creating all the RTOS specific primitives to allow for thread-safe operation.</para><para>The Comparator driver is an analog driver that accepts a configuration of two analog input signals, compares those values, and then outputs high on the output signal if the positive input is greater than that of the negative input terminal. This output signal can be configured in either inverted or non-inverted based off the user configuration.</para><para>Device specific capabilities such as output analog filters and programmable hysteresis are configured via the implementation specific hwAttrs configuration structure. This top level driver provides all APIs needed to provide a uniform and generic Comparator driver experience regardless of the underlying peripheral implementation.</para><para><hruler/>
 <anchor id="_comparator_8h_1ti_drivers_Comparator_Usage"/><heading level="1">Usage</heading>
</para><para>This documentation provides a basic <ref refid="_comparator_8h_1ti_drivers_Comparator_Synopsis" kindref="member">usage summary</ref> and a set of <ref refid="_comparator_8h_1ti_drivers_Comparator_Examples" kindref="member">examples</ref> in the form of commented code fragments. Detailed descriptions of the APIs are provided in subsequent sections.</para><para><anchor id="_comparator_8h_1ti_drivers_Comparator_Synopsis"/><heading level="2">Synopsis</heading>
</para><para>The Comparator driver is used to monitor two input analog signals and generate an output if the potential of the positive input terminal is greater than that of the negative input channel. This is commonly used for power supply supervision as well as precision slope analog-to-digital conversions. The code below sets up two arbitrary input signals to the Comparator driver and handles triggers of the voltage crossing in the appropriate callback function.</para><para>The Comparator driver supports two distinct methods of accessing/utilizing the underlying comparator peripheral&apos;s output signal: accessing the output level dynamically and providing a user callback function.</para><para>Accessing the output level directly can be done by calling the <ref refid="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" kindref="member">Comparator_getLevel()</ref> API after the driver has been successfully opened and started. This function will return a <ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6a502bb09684d685c56549c55ed4905508" kindref="member">Comparator_OUTPUT_HIGH</ref> if the positive input terminal is more positive than the negative terminal and <ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6aa3c5bb26cda817e957685b47f38e17bb" kindref="member">Comparator_OUTPUT_LOW</ref> if the reverse is true. If the output level of the comparator peripheral cannot be determined or the device is in an error state a value of <ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6ac6c7cc1e84a45f6f41e9725720a654c9" kindref="member">Comparator_OUTPUT_NOT_AVAILABLE</ref> is returned.</para><para>The user callback functionality provides a way for the Comparator driver and its underlying implementation to communicate functional events as well as errors to the calling user application. If a non-null function pointer is provided to the callbackFxn configuration parameter a call to the callback will be invoked whenever a relevant event occurs in the driver. Primarily this callback will be invoked when the output of the comparator is triggered (or inversely triggered), however error events can also be passed through this callback.</para><para>Note that these programming models are compatible with each other and can be mixed accordingly. For example a user callback can be provided and the <ref refid="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" kindref="member">Comparator_getLevel()</ref> API can be called in any scenario.</para><para><anchor id="_comparator_8h_1ti_drivers_Comparator_Synopsis_Code"/> <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/Comparator.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>comparatorCallback(Comparator_Handle<sp/>handle,<sp/>int_fast16_t<sp/>status)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>switch<sp/>(status)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_OUTPUT_TRIGGERED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>triggered</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_post(&amp;someSemaphore);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_OUTPUT_INVERTED_TRIGGERED:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>triggered<sp/>in<sp/>the<sp/>other<sp/>direction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_post(&amp;someSemaphore);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_ERROR:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__breakpoint(0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>someComparatorFunction()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>&amp;comparatorCallback;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.interruptLevel<sp/>=<sp/>Comparator_INTERRUPT_RISING;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>Comparator_open(CONFIG_COMPARATOR0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Comparator_open()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>Comparator_start(handle);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(status<sp/>==<sp/>Comparator_STATUS_ERROR)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Comparator_start()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Waiting<sp/>for<sp/>some<sp/>output<sp/>event<sp/>to<sp/>signal<sp/>from<sp/>the<sp/>callback</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>sem_wait(&amp;someSemaphore);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_stop(handle);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para>Note that while the code above operates with a callback function provided, if a NULL value is given as the callbackFxn parameter the <ref refid="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" kindref="member">Comparator_getLevel()</ref> function can be invoked to dynamically get the output level of an initialized/started Comparator driver instance.</para><para><hruler/>
 <anchor id="_comparator_8h_1ti_drivers_Comparator_Examples"/><heading level="1">Examples</heading>
</para><para><itemizedlist>
<listitem><para><ref refid="_comparator_8h_1ti_drivers_Comparator_Examples_open" kindref="member">Opening a Comparator instance</ref></para></listitem>
</itemizedlist>
<anchor id="_comparator_8h_1ti_drivers_Comparator_Examples_open"/><heading level="2">Opening a Comparator instance</heading>
</para><para><programlisting><codeline><highlight class="normal">Comparator_Handle<sp/>comparator;</highlight></codeline>
<codeline><highlight class="normal">Comparator_Params<sp/>params;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Comparator_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal">comparator<sp/>=<sp/>Comparator_open(CONFIG_COMP0,<sp/>&amp;params);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(comparator<sp/>==<sp/>NULL)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Comparator_open()<sp/>failed</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>while<sp/>(1);</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><hruler/>
 <anchor id="_comparator_8h_1ti_drivers_Comparator_Configuration"/><heading level="1">Configuration</heading>
</para><para>Refer to the <ref refid="index_1driver_configuration" kindref="member">Driver&apos;s Configuration</ref> section for driver configuration information. <hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2019-2020,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!*****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Comparator.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>&lt;b&gt;PRELIMINARY&lt;/b&gt;<sp/>Comparator<sp/>Driver<sp/>Interface</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>&lt;b&gt;WARNING&lt;/b&gt;<sp/>These<sp/>APIs<sp/>are<sp/>&lt;b&gt;PRELIMINARY&lt;/b&gt;,<sp/>and<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>change<sp/>in<sp/>the<sp/>next<sp/>few<sp/>months.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Overview</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Overview</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Comparator<sp/>driver<sp/>serves<sp/>as<sp/>the<sp/>main<sp/>interface<sp/>for<sp/>a<sp/>typical<sp/>RTOS</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>application.<sp/>Its<sp/>purpose<sp/>is<sp/>to<sp/>redirect<sp/>the<sp/>Comparator<sp/>APIs<sp/>to<sp/>device</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>specific<sp/>implementations<sp/>which<sp/>are<sp/>specified<sp/>using<sp/>a<sp/>pointer<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>#Comparator_FxnTable.<sp/>The<sp/>device<sp/>specific<sp/>implementations<sp/>are<sp/>responsible</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>creating<sp/>all<sp/>the<sp/>RTOS<sp/>specific<sp/>primitives<sp/>to<sp/>allow<sp/>for<sp/>thread-safe</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>operation.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Comparator<sp/>driver<sp/>is<sp/>an<sp/>analog<sp/>driver<sp/>that<sp/>accepts<sp/>a<sp/>configuration<sp/>of</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>two<sp/>analog<sp/>input<sp/>signals,<sp/>compares<sp/>those<sp/>values,<sp/>and<sp/>then<sp/>outputs<sp/>high<sp/>on</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>output<sp/>signal<sp/>if<sp/>the<sp/>positive<sp/>input<sp/>is<sp/>greater<sp/>than<sp/>that<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>negative<sp/>input<sp/>terminal.<sp/>This<sp/>output<sp/>signal<sp/>can<sp/>be<sp/>configured<sp/>in<sp/>either</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>inverted<sp/>or<sp/>non-inverted<sp/>based<sp/>off<sp/>the<sp/>user<sp/>configuration.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>Device<sp/>specific<sp/>capabilities<sp/>such<sp/>as<sp/>output<sp/>analog<sp/>filters<sp/>and<sp/>programmable</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>hysteresis<sp/>are<sp/>configured<sp/>via<sp/>the<sp/>implementation<sp/>specific<sp/>hwAttrs</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>configuration<sp/>structure.<sp/>This<sp/>top<sp/>level<sp/>driver<sp/>provides<sp/>all<sp/>APIs<sp/>needed<sp/>to</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>provide<sp/>a<sp/>uniform<sp/>and<sp/>generic<sp/>Comparator<sp/>driver<sp/>experience<sp/>regardless<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/>underlying<sp/>peripheral<sp/>implementation.</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Usage</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Usage</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>documentation<sp/>provides<sp/>a<sp/>basic<sp/>@ref<sp/>ti_drivers_Comparator_Synopsis</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>&quot;usage<sp/>summary&quot;<sp/>and<sp/>a<sp/>set<sp/>of<sp/>@ref<sp/>ti_drivers_Comparator_Examples<sp/>&quot;examples&quot;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>the<sp/>form<sp/>of<sp/>commented<sp/>code<sp/>fragments.<sp/>Detailed<sp/>descriptions<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>APIs<sp/>are<sp/>provided<sp/>in<sp/>subsequent<sp/>sections.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Synopsis</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Synopsis</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Comparator<sp/>driver<sp/>is<sp/>used<sp/>to<sp/>monitor<sp/>two<sp/>input<sp/>analog<sp/>signals<sp/>and</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/>generate<sp/>an<sp/>output<sp/>if<sp/>the<sp/>potential<sp/>of<sp/>the<sp/>positive<sp/>input<sp/>terminal<sp/>is</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>greater<sp/>than<sp/>that<sp/>of<sp/>the<sp/>negative<sp/>input<sp/>channel.<sp/>This<sp/>is<sp/>commonly<sp/>used<sp/>for</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/>power<sp/>supply<sp/>supervision<sp/>as<sp/>well<sp/>as<sp/>precision<sp/>slope<sp/>analog-to-digital</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>conversions.<sp/>The<sp/>code<sp/>below<sp/>sets<sp/>up<sp/>two<sp/>arbitrary<sp/>input<sp/>signals<sp/>to</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Comparator<sp/>driver<sp/>and<sp/>handles<sp/>triggers<sp/>of<sp/>the<sp/>voltage<sp/>crossing<sp/>in</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>appropriate<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>Comparator<sp/>driver<sp/>supports<sp/>two<sp/>distinct<sp/>methods<sp/>of<sp/>accessing/utilizing</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>underlying<sp/>comparator<sp/>peripheral&apos;s<sp/>output<sp/>signal:<sp/>accessing<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/>level<sp/>dynamically<sp/>and<sp/>providing<sp/>a<sp/>user<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/>Accessing<sp/>the<sp/>output<sp/>level<sp/>directly<sp/>can<sp/>be<sp/>done<sp/>by<sp/>calling<sp/>the</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_getLevel()<sp/>API<sp/>after<sp/>the<sp/>driver<sp/>has<sp/>been<sp/>successfully<sp/>opened</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>started.<sp/>This<sp/>function<sp/>will<sp/>return<sp/>a<sp/>#Comparator_OUTPUT_HIGH<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>positive<sp/>input<sp/>terminal<sp/>is<sp/>more<sp/>positive<sp/>than<sp/>the<sp/>negative<sp/>terminal<sp/>and</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>#Comparator_OUTPUT_LOW<sp/>if<sp/>the<sp/>reverse<sp/>is<sp/>true.<sp/>If<sp/>the<sp/>output<sp/>level<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>comparator<sp/>peripheral<sp/>cannot<sp/>be<sp/>determined<sp/>or<sp/>the<sp/>device<sp/>is<sp/>in<sp/>an<sp/>error</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>state<sp/>a<sp/>value<sp/>of<sp/>#Comparator_OUTPUT_NOT_AVAILABLE<sp/>is<sp/>returned.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>user<sp/>callback<sp/>functionality<sp/>provides<sp/>a<sp/>way<sp/>for<sp/>the<sp/>Comparator<sp/>driver</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>its<sp/>underlying<sp/>implementation<sp/>to<sp/>communicate<sp/>functional<sp/>events<sp/>as<sp/>well</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>errors<sp/>to<sp/>the<sp/>calling<sp/>user<sp/>application.<sp/>If<sp/>a<sp/>non-null<sp/>function<sp/>pointer<sp/>is</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>provided<sp/>to<sp/>the<sp/>callbackFxn<sp/>configuration<sp/>parameter<sp/>a<sp/>call<sp/>to<sp/>the<sp/>callback</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>be<sp/>invoked<sp/>whenever<sp/>a<sp/>relevant<sp/>event<sp/>occurs<sp/>in<sp/>the<sp/>driver.<sp/>Primarily</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>callback<sp/>will<sp/>be<sp/>invoked<sp/>when<sp/>the<sp/>output<sp/>of<sp/>the<sp/>comparator<sp/>is</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>triggered<sp/>(or<sp/>inversely<sp/>triggered),<sp/>however<sp/>error<sp/>events<sp/>can<sp/>also<sp/>be</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>passed<sp/>through<sp/>this<sp/>callback.</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>these<sp/>programming<sp/>models<sp/>are<sp/>compatible<sp/>with<sp/>each<sp/>other<sp/>and<sp/>can</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>be<sp/>mixed<sp/>accordingly.<sp/>For<sp/>example<sp/>a<sp/>user<sp/>callback<sp/>can<sp/>be<sp/>provided<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_getLevel()<sp/>API<sp/>can<sp/>be<sp/>called<sp/>in<sp/>any<sp/>scenario.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Synopsis_Code</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/Comparator.h&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/>void<sp/>comparatorCallback(Comparator_Handle<sp/>handle,<sp/>int_fast16_t<sp/>status)</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>switch<sp/>(status)</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_OUTPUT_TRIGGERED:</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>triggered</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_post(&amp;someSemaphore);</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_OUTPUT_INVERTED_TRIGGERED:</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>triggered<sp/>in<sp/>the<sp/>other<sp/>direction</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sem_post(&amp;someSemaphore);</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>case<sp/>Comparator_EVENT_ERROR:</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__breakpoint(0);</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>default:</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/>void<sp/>someComparatorFunction()</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Comparator_Handle<sp/><sp/><sp/><sp/>handle;</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Comparator_Params<sp/><sp/><sp/><sp/>params;</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Comparator_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>&amp;comparatorCallback;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>params.interruptLevel<sp/>=<sp/>Comparator_INTERRUPT_RISING;</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>Comparator_open(CONFIG_COMPARATOR0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Comparator_open()<sp/>failed</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>Comparator_start(handle);</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(status<sp/>==<sp/>Comparator_STATUS_ERROR)</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Comparator_start()<sp/>failed</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>while(1);</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Waiting<sp/>for<sp/>some<sp/>output<sp/>event<sp/>to<sp/>signal<sp/>from<sp/>the<sp/>callback</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>sem_wait(&amp;someSemaphore);</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Comparator_stop(handle);</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>while<sp/>the<sp/>code<sp/>above<sp/>operates<sp/>with<sp/>a<sp/>callback<sp/>function<sp/>provided,</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>a<sp/>NULL<sp/>value<sp/>is<sp/>given<sp/>as<sp/>the<sp/>callbackFxn<sp/>parameter<sp/>the</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_getLevel()<sp/>function<sp/>can<sp/>be<sp/>invoked<sp/>to<sp/>dynamically<sp/>get<sp/>the<sp/>output</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/>level<sp/>of<sp/>an<sp/>initialized/started<sp/>Comparator<sp/>driver<sp/>instance.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Examples</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Examples</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/>@li<sp/>@ref<sp/>ti_drivers_Comparator_Examples_open<sp/>&quot;Opening<sp/>a<sp/>Comparator<sp/>instance&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Examples_open</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Opening<sp/>a<sp/>Comparator<sp/>instance</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_Handle<sp/>comparator;</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_Params<sp/>params;</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/>Comparator_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/>comparator<sp/>=<sp/>Comparator_open(CONFIG_COMP0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(comparator<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Comparator_open()<sp/>failed</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(1);</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_Comparator_Configuration</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/><sp/>#<sp/>Configuration</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/>Refer<sp/>to<sp/>the<sp/>@ref<sp/>driver_configuration<sp/>&quot;Driver&apos;s<sp/>Configuration&quot;<sp/>section</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/>for<sp/>driver<sp/>configuration<sp/>information.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/><sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*******************************************************************************</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_Comparator__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_Comparator__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="group___comparator___s_t_a_t_u_s_1ga68011e3a7d13a44198f06cb33529ab68" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="group___comparator___s_t_a_t_u_s_1ga2ea4eb65981e702408d21dc3fba3aea8" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="group___comparator___s_t_a_t_u_s_1ga2d11038df9bd06ec24930e1c17e53840" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="group___comparator___e_v_e_n_t_1ga8eee3343a2691d8dbf963301c68f9aac" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_EVENT_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="group___comparator___e_v_e_n_t_1gac1d081287a8640d0307a987a09431729" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_EVENT_OUTPUT_TRIGGERED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="group___comparator___e_v_e_n_t_1gaaf043320bc3b3ad577b2c65cbc9110d8" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_EVENT_OUTPUT_INVERTED_TRIGGERED<sp/><sp/><sp/><sp/>(2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="group___comparator___e_v_e_n_t_1ga8ce8f582a8f76f4a9bd43554696aa719" refkind="member"><highlight class="preprocessor">#define<sp/>Comparator_EVENT_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_comparator___config__" kindref="compound">Comparator_Config_</ref><sp/>*<ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307" refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01a5e62c1e9bfcf4c8d73d71721a8cf6db6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01a5e62c1e9bfcf4c8d73d71721a8cf6db6" kindref="member">Comparator_OUTPUT_NORMAL</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311" refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01af672c9469da6556a02a37bed09934f85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01af672c9469da6556a02a37bed09934f85" kindref="member">Comparator_OUTPUT_INVERTED</ref>,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal">}<sp/><ref refid="_comparator_8h_1aadc4ddac80c21fe27943657fa3011a01" kindref="member">Comparator_OutputPolarity</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="327" refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6a502bb09684d685c56549c55ed4905508" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6a502bb09684d685c56549c55ed4905508" kindref="member">Comparator_OUTPUT_HIGH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="330" refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6aa3c5bb26cda817e957685b47f38e17bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6aa3c5bb26cda817e957685b47f38e17bb" kindref="member">Comparator_OUTPUT_LOW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="333" refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6ac6c7cc1e84a45f6f41e9725720a654c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6ac6c7cc1e84a45f6f41e9725720a654c9" kindref="member">Comparator_OUTPUT_NOT_AVAILABLE</ref>,<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal">}<sp/><ref refid="_comparator_8h_1a1aa16d8e1bebcf11132d0e8cf39a2fd6" kindref="member">Comparator_OutputLevel</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a88387611ccc7ccb2aba98953a3885012" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a88387611ccc7ccb2aba98953a3885012" kindref="member">Comparator_INTERRUPT_NONE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="349" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ae9628e157dddfce101336b8f098ca40f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ae9628e157dddfce101336b8f098ca40f" kindref="member">Comparator_INTERRUPT_RISING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="351" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238af5e853aab6523ab20936cf4a7cf0ada6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238af5e853aab6523ab20936cf4a7cf0ada6" kindref="member">Comparator_INTERRUPT_FALLING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a18d8f0891a5bb8d7efb38613ad64ea18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238a18d8f0891a5bb8d7efb38613ad64ea18" kindref="member">Comparator_INTERRUPT_BOTH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ac2c88bf535ec54acd149a887cbe9d47d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ac2c88bf535ec54acd149a887cbe9d47d" kindref="member">Comparator_INTERRUPT_HIGH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358" refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ad67ca5a31e5886f4f057663bc6b5e6a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238ad67ca5a31e5886f4f057663bc6b5e6a5" kindref="member">Comparator_INTERRUPT_LOW</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal">}<sp/><ref refid="_comparator_8h_1a740a7a783a039a243667b2b858e5f238" kindref="member">Comparator_InterruptLevel</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="_comparator_8h_1aa0647f68f02d466e5e9981bbdbb8a829" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_comparator_8h_1aa0647f68f02d466e5e9981bbdbb8a829" kindref="member">Comparator_CallBackFxn</ref>)(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>status);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="struct_comparator___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388" refid="struct_comparator___params_1a3489bd7ec8306583b38fe521dedbf676" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1aa0647f68f02d466e5e9981bbdbb8a829" kindref="member">Comparator_CallBackFxn</ref><sp/><ref refid="struct_comparator___params_1a3489bd7ec8306583b38fe521dedbf676" kindref="member">callbackFxn</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="struct_comparator___params_1ae8e6e23c4893c9a6206a022cac693c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_OutputPolarity<sp/><ref refid="struct_comparator___params_1ae8e6e23c4893c9a6206a022cac693c78" kindref="member">outputPolarity</ref>;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="struct_comparator___params_1a022c0e0c71f9aff12cca9ff0ba086dc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>Comparator_InterruptLevel<sp/><ref refid="struct_comparator___params_1a022c0e0c71f9aff12cca9ff0ba086dc5" kindref="member">interruptLevel</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal">}<sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="_comparator_8h_1adc116d03196b3bf1be891115401e0aa2" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_comparator_8h_1adc116d03196b3bf1be891115401e0aa2" kindref="member">Comparator_CloseFxn</ref>)(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="_comparator_8h_1aebb8a944da4f9d7b63f7c4ab71eeedb9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/>(*<ref refid="_comparator_8h_1aebb8a944da4f9d7b63f7c4ab71eeedb9" kindref="member">Comparator_GetLevelFxn</ref>)(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="_comparator_8h_1ab03d85bccb1914cc6eda1f336f679369" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_comparator_8h_1ab03d85bccb1914cc6eda1f336f679369" kindref="member">Comparator_InitFxn</ref>)(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="_comparator_8h_1aa9b4e369b6c8fd4e71d7570fd270fa18" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_comparator_8h_1ac98444eea1a8537943da72ba74a4a9d9" kindref="member">Comparator_Handle</ref><sp/>(*<ref refid="_comparator_8h_1aa9b4e369b6c8fd4e71d7570fd270fa18" kindref="member">Comparator_OpenFxn</ref>)(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="_comparator_8h_1a3fddecb5728e399b68ae781e32c7b14a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_fast16_t<sp/>(*<ref refid="_comparator_8h_1a3fddecb5728e399b68ae781e32c7b14a" kindref="member">Comparator_StartFxn</ref>)(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="_comparator_8h_1a2d6c5d635cfa4720ba38ed7cb65c6a1a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_comparator_8h_1a2d6c5d635cfa4720ba38ed7cb65c6a1a" kindref="member">Comparator_StopFxn</ref>)(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="_comparator_8h_1a62512b8db52de47975fe8d41374017f5" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_fast16_t<sp/>(*<ref refid="_comparator_8h_1a62512b8db52de47975fe8d41374017f5" kindref="member">Comparator_GetParamsFxn</ref>)(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="_comparator_8h_1a4193f0b3b62fa9f4dda4d126f9ef63ed" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int_fast16_t<sp/>(*<ref refid="_comparator_8h_1a4193f0b3b62fa9f4dda4d126f9ef63ed" kindref="member">Comparator_SetParamsFxn</ref>)(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="struct_comparator___fxn_table" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457" refid="struct_comparator___fxn_table_1aa88cfa1de98061fa6b2a3b54bddb374f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1adc116d03196b3bf1be891115401e0aa2" kindref="member">Comparator_CloseFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1aa88cfa1de98061fa6b2a3b54bddb374f" kindref="member">closeFxn</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="struct_comparator___fxn_table_1a77ae678b6d1914b75815012c01fabbc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1aebb8a944da4f9d7b63f7c4ab71eeedb9" kindref="member">Comparator_GetLevelFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a77ae678b6d1914b75815012c01fabbc7" kindref="member">getLevelFxn</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="463" refid="struct_comparator___fxn_table_1a9b048c7b5b31bfe2140eecf21d28fb8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1ab03d85bccb1914cc6eda1f336f679369" kindref="member">Comparator_InitFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a9b048c7b5b31bfe2140eecf21d28fb8f" kindref="member">initFxn</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="struct_comparator___fxn_table_1a693269e9d2906e2fe4adf242df4af273" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1aa9b4e369b6c8fd4e71d7570fd270fa18" kindref="member">Comparator_OpenFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a693269e9d2906e2fe4adf242df4af273" kindref="member">openFxn</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="struct_comparator___fxn_table_1ac95b0c4057a78416f2e4f3e939150e8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a3fddecb5728e399b68ae781e32c7b14a" kindref="member">Comparator_StartFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1ac95b0c4057a78416f2e4f3e939150e8a" kindref="member">startFxn</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="struct_comparator___fxn_table_1a172b93d7c1e04649caed7b8842787626" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a2d6c5d635cfa4720ba38ed7cb65c6a1a" kindref="member">Comparator_StopFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a172b93d7c1e04649caed7b8842787626" kindref="member">stopFxn</ref>;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="475" refid="struct_comparator___fxn_table_1a1df70078c1b47e755675a326f38edbc9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a62512b8db52de47975fe8d41374017f5" kindref="member">Comparator_GetParamsFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a1df70078c1b47e755675a326f38edbc9" kindref="member">getParamsFxn</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="struct_comparator___fxn_table_1a777f8ca1f0ce46c8773a747a9d9eecec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_comparator_8h_1a4193f0b3b62fa9f4dda4d126f9ef63ed" kindref="member">Comparator_SetParamsFxn</ref><sp/><ref refid="struct_comparator___fxn_table_1a777f8ca1f0ce46c8773a747a9d9eecec" kindref="member">setParamsFxn</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}<sp/><ref refid="struct_comparator___fxn_table" kindref="compound">Comparator_FxnTable</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="struct_comparator___config__" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_comparator___config__" kindref="compound">Comparator_Config_</ref></highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491" refid="struct_comparator___config___1aa263a10b841d7c02ca7e834fd6883466" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_comparator___fxn_table" kindref="compound">Comparator_FxnTable</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_comparator___config___1aa263a10b841d7c02ca7e834fd6883466" kindref="member">fxnTablePtr</ref>;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="494" refid="struct_comparator___config___1a2846ace59a02b821543c67625292953e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_comparator___config___1a2846ace59a02b821543c67625292953e" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="struct_comparator___config___1a346dfc8ec7a6a7c9c96fad0570b84aa4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_comparator___config___1a346dfc8ec7a6a7c9c96fad0570b84aa4" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal">}<sp/><ref refid="_comparator_8h_1af0b6e9554dc935a9c4ac1481f7579136" kindref="member">Comparator_Config</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_comparator_8h_1a8862b12656bc855b405fdfe6db4ea763" kindref="member">Comparator_close</ref>(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_comparator_8h_1abd6c0aff8b4431b915c1f06961055d29" kindref="member">Comparator_control</ref>(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint_fast16_t<sp/>cmd,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*arg);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Comparator_OutputLevel<sp/><ref refid="_comparator_8h_1a39dfd722e696d6e090905a4e3a3442fb" kindref="member">Comparator_getLevel</ref>(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_comparator_8h_1a46d83babc082f59a5e729b34c50f9e55" kindref="member">Comparator_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>Comparator_Handle<sp/><ref refid="_comparator_8h_1a92b76b217b64f0d709dda89aba717c05" kindref="member">Comparator_open</ref>(uint32_t<sp/>index,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_comparator_8h_1a564d4e90c709868465292753b88508f0" kindref="member">Comparator_Params_init</ref>(<ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_comparator_8h_1a10d777c7d2a591e9f5136f372e1727c9" kindref="member">Comparator_start</ref>(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_comparator_8h_1aa510c5e76f01457177efa49232b3fc17" kindref="member">Comparator_stop</ref>(Comparator_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_comparator_8h_1a79b406c4e5ef937764aae2c7833c9da5" kindref="member">Comparator_getParams</ref>(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int_fast16_t<sp/><ref refid="_comparator_8h_1a6b2436fc8253844b8f82206912572c8a" kindref="member">Comparator_setParams</ref>(Comparator_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_comparator___params" kindref="compound">Comparator_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_Comparator__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432e4/source/ti/drivers/Comparator.h"/>
  </compounddef>
</doxygen>

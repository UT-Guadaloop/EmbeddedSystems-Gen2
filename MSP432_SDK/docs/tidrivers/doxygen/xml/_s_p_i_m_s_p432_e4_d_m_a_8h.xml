<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_s_p_i_m_s_p432_e4_d_m_a_8h" kind="file" language="C++">
    <compoundname>SPIMSP432E4DMA.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">ti/devices/msp432e4/inc/msp432.h</includes>
    <includes local="no">ti/devices/msp432e4/driverlib/pin_map.h</includes>
    <includes refid="_u_d_m_a_m_s_p432_e4_8h" local="no">ti/drivers/dma/UDMAMSP432E4.h</includes>
    <includes local="no">ti/drivers/dpl/HwiP.h</includes>
    <includes local="no">ti/drivers/dpl/SemaphoreP.h</includes>
    <includes refid="_g_p_i_o_m_s_p432_e4_8h" local="no">ti/drivers/gpio/GPIOMSP432E4.h</includes>
    <includes refid="_s_p_i_8h" local="no">ti/drivers/SPI.h</includes>
    <incdepgraph>
      <node id="452">
        <label>stdbool.h</label>
      </node>
      <node id="459">
        <label>ti/drivers/gpio/GPIOMSP432E4.h</label>
        <link refid="_g_p_i_o_m_s_p432_e4_8h"/>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>stdint.h</label>
      </node>
      <node id="462">
        <label>ti/drivers/SPI.h</label>
        <link refid="_s_p_i_8h"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>ti/drivers/dpl/SemaphoreP.h</label>
      </node>
      <node id="463">
        <label>stddef.h</label>
      </node>
      <node id="460">
        <label>ti/devices/msp432e4/driverlib/gpio.h</label>
      </node>
      <node id="457">
        <label>ti/drivers/dpl/HwiP.h</label>
      </node>
      <node id="456">
        <label>ti/drivers/dma/UDMAMSP432E4.h</label>
        <link refid="_u_d_m_a_m_s_p432_e4_8h"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
      </node>
      <node id="461">
        <label>ti/drivers/GPIO.h</label>
        <link refid="_g_p_i_o_8h"/>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="455">
        <label>ti/devices/msp432e4/driverlib/pin_map.h</label>
      </node>
      <node id="454">
        <label>ti/devices/msp432e4/inc/msp432.h</label>
      </node>
      <node id="451">
        <label>SPIMSP432E4DMA.h</label>
        <link refid="_s_p_i_m_s_p432_e4_d_m_a_8h"/>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs" prot="public">SPIMSP432E4DMA_HWAttrs</innerclass>
    <innerclass refid="struct_s_p_i_m_s_p432_e4_d_m_a___object" prot="public">SPIMSP432E4DMA_Object</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_p_i_m_s_p432_e4_d_m_a_8h_1ae2bb4bf8fcafd5d8b30e881f97edbc79" prot="public" static="no">
        <name>SPIMSP432E4_PIN_NO_CONFIG</name>
        <initializer>(0xFFFFFFFF)</initializer>
        <briefdescription>
<para>SPIMSP432E4_PIN_NO_CONFIG can be used to inform the SPIMSP432E4DMA driver that a pin should not be configured for use in the SPI bus. If the MOSI pin, MISO pin or FSS is set to SPIMSP432E4_PIN_NO_CONFIG in the <ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs" kindref="compound">SPIMSP432E4DMA_HWAttrs</ref>, the pin is not configured to SPI functionality in <ref refid="_s_p_i_8h_1a9c9022decfb136991d6b53f7dd2ae2fc" kindref="member">SPI_open()</ref> and the pin can be used for another function. The clkPin cannot be set to SPIMSP432E4_PIN_NO_CONFIG; the clock signal is always required during communication &amp; must be driven by the SPI bus master. </para>        </briefdescription>
        <detaileddescription>
<para>Prevent pin defines from cluttering doxygen</para><para>Setting pins to SPIMSP432E4_PIN_NO_CONFIG can be useful in the following situations:<orderedlist>
<listitem><para>MOSI = SPIMSP432E4_PIN_NO_CONFIG: Useful in situations where the master will not transmit meaningful data but instead is interested in receiving data from slaves. Slaves must ignore incoming data from master.</para></listitem><listitem><para>MOSI = SPIMSP432E4_PIN_NO_CONFIG: Useful in situations where the SPI bus master will transmit data to the slaves &amp; is not interested in the data returned by the slaves.</para></listitem><listitem><para>FSS = SPIMSP432E4_PIN_NO_CONFIG: Useful in situations the FSS (chip select) pin will be handled by the application instead of automatically by the hardware. This is useful when the SPI master has to communicate with multiple slaves. Slaves cannot set FSS to SPIMSP432E4_PIN_NO_CONFIG. </para></listitem></orderedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/spi/SPIMSP432E4DMA.h" line="347" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/spi/SPIMSP432E4DMA.h" bodystart="347" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_p_i_m_s_p432_e4_d_m_a_8h_1a3654610d892fa54e3c7ff2ef7586fc16" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_s_p_i___fxn_table" kindref="compound">SPI_FxnTable</ref></type>
        <definition>const SPI_FxnTable SPIMSP432E4DMA_fxnTable</definition>
        <argsstring></argsstring>
        <name>SPIMSP432E4DMA_fxnTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/spi/SPIMSP432E4DMA.h" line="378" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SPI driver implementation for a MSP432E4 SPI controller using the micro DMA controller. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para>The SPI header file should be included in an application as follows: <programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/SPI.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/spi/SPIMSP432E4DMA.h&gt;</highlight></codeline>
</programlisting></para><para>Refer to <ref refid="_s_p_i_8h" kindref="compound">SPI.h</ref> for a complete description of APIs &amp; example of use.</para><para>This SPI driver implementation is designed to operate on a MSP432E4 SPI controller using a micro DMA controller in ping pong mode. This driver allows for queueing multiple SPI transactions.</para><para><heading level="2">Frame Formats</heading>
</para><para>This SPI controller supports 4 phase &amp; polarity formats as well as the TI synchronous serial frame format. Refer to the device specific data sheets &amp; technical reference manuals for specifics on each format.</para><para><heading level="2">SPI Chip Select</heading>
</para><para>This SPI controller supports a hardware chip select pin. Refer to the device&apos;s user manual on how this hardware chip select pin behaves in regards to the SPI frame format.</para><para><table rows="3" cols="3"><row>
<entry thead="yes"><para>Chip select type </para></entry><entry thead="yes"><para>SPI_MASTER mode </para></entry><entry thead="yes"><para>SPI_SLAVE mode  </para></entry></row>
<row>
<entry thead="no"><para>Hardware chip select </para></entry><entry thead="no"><para>No action is needed by the application to select the peripheral. </para></entry><entry thead="no"><para>See the device documentation on it&apos;s chip select requirements.  </para></entry></row>
<row>
<entry thead="no"><para>Software chip select </para></entry><entry thead="no"><para>The application is responsible to ensure that correct SPI slave is selected before performing a <ref refid="_s_p_i_8h_1a989e17f96b54fcc3dc2cac5f8ac6bdb2" kindref="member">SPI_transfer()</ref>. </para></entry><entry thead="no"><para>See the device documentation on it&apos;s chip select requirements.  </para></entry></row>
</table>
</para><para><heading level="2">SPI data frames</heading>
</para><para>SPI data frames can be any size from 4-bits to 16-bits. If the dataSize in <ref refid="struct_s_p_i___params" kindref="compound">SPI_Params</ref> is greater than 8-bits, then the SPIMSP432E4DMA driver will assume that the <ref refid="struct_s_p_i___transaction" kindref="compound">SPI_Transaction</ref> txBuf and rxBuf point to 16-bit (uint16_t) arrays.</para><para><table rows="3" cols="2"><row>
<entry thead="yes"><para>dataSize </para></entry><entry thead="yes"><para>buffer element size  </para></entry></row>
<row>
<entry thead="no"><para>4-8 bits </para></entry><entry thead="no"><para>uint8_t </para></entry></row>
<row>
<entry thead="no"><para>9-16 bits </para></entry><entry thead="no"><para>uint16_t </para></entry></row>
</table>
Data buffers in transactions (rxBuf &amp; txBuf) must be address aligned according to the data frame size. For example, if data frame is 9-bit or larger (driver assumes buffers are uint16_t) rxBuf &amp; txBuf must be aligned on a 16-bit address boundary.</para><para><heading level="2">Interrupts</heading>
</para><para>This driver is designed to make use of the micro DMA for transfers. The driver implementation automatically installs a hardware interrupt service routine for the peripheral on which micro DMA generates IRQ once all data has transfered from memory to the peripheral (TX) or from peripheral to memory (RX).</para><para><heading level="2">DMA and Queueing</heading>
</para><para>This driver utilizes DMA channels in ping pong mode (see device TRM) in order to overcome the 1024 item DMA channel limit. This means the driver can execute multi kilo-item transactions without pausing to reconfigure the DMA and causing gaps in transmission. In addition, the driver also allows the user to queue up transfers when opened in <ref refid="_s_p_i_8h_1ab9ea76c6529d6076eee5e1c4a5a92c6fa5631e69925c47a62a261c78ebbda39fb" kindref="member">SPI_MODE_CALLBACK</ref> by calling <ref refid="_s_p_i_8h_1a989e17f96b54fcc3dc2cac5f8ac6bdb2" kindref="member">SPI_transfer()</ref> multiple times. Note that each transaction&apos;s <ref refid="struct_s_p_i___transaction" kindref="compound">SPI_Transaction</ref> struct must still be persistent and unmodified until that transaction is complete.</para><para><anchor id="_s_p_i_m_s_p432_e4_d_m_a_8h_1ti_drivers_spi_SPIMSP432E4DMA_example_queueing"/> Below is an example of queueing three transactions <programlisting><codeline><highlight class="normal">//<sp/>SPI<sp/>already<sp/>opened<sp/>in<sp/>callback<sp/>mode</highlight></codeline>
<codeline><highlight class="normal">SPI_Transaction<sp/>t0,<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">t0.txBuf<sp/>=<sp/>txBuff0;</highlight></codeline>
<codeline><highlight class="normal">t0.rxBuf<sp/>=<sp/>rxBuff0;</highlight></codeline>
<codeline><highlight class="normal">t0.count<sp/>=<sp/>2000;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">t1.txBuf<sp/>=<sp/>txBuff1;</highlight></codeline>
<codeline><highlight class="normal">t1.rxBuf<sp/>=<sp/>rxBuff1;</highlight></codeline>
<codeline><highlight class="normal">t1.count<sp/>=<sp/>1000;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">t2.txBuf<sp/>=<sp/>txBuff2;</highlight></codeline>
<codeline><highlight class="normal">t2.rxBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline><highlight class="normal">t2.count<sp/>=<sp/>1000;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">bool<sp/>transferOk<sp/>=<sp/>false;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(SPI_transfer(spiHandle,<sp/>&amp;t0))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(SPI_transfer(spiHandle,<sp/>&amp;t1))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transferOk<sp/>=<sp/>SPI_transfer(spiHandle,<sp/>&amp;t2);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para><para><heading level="2">DMA accessible memory</heading>
</para><para>As this driver uses uDMA to transfer data to/from data buffers, it is the responsibility of the application to ensure that theses buffers reside in memory that is accessible by the DMA.</para><para><heading level="2">NULL Buffers</heading>
</para><para>When <ref refid="struct_s_p_i___transaction_1a214f57d7809c875fb9456a62a406e041" kindref="member">SPI_Transaction.rxBuf</ref> is NULL, all frames received will be discarded. When <ref refid="struct_s_p_i___transaction_1a9461a248f1cceb4048668d44b323a0b8" kindref="member">SPI_Transaction.txBuf</ref> is NULL, an internal scratch buffer is initialized to <ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a0f097b5ac5669ce75e2c5cb770f55863" kindref="member">SPIMSP432E4DMA_HWAttrs.defaultTxBufValue</ref> so the uDMA will send some known value.</para><para><heading level="2">Polling SPI transfers</heading>
</para><para>When used in blocking mode small SPI transfers are can be done by polling the peripheral &amp; sending data frame-by-frame. For master devices this will not block since the transfer can happen immediately. Slaves must exercise caution since the call will poll on the HW until the transfer is complete. For this reason slaves with a transfer timeout will not use polling transfers. The minDmaTransferSize field in the hardware attributes is the threshold; if the transaction count is below the threshold a polling transfer is performed; otherwise a DMA transfer is done. This is intended to reduce the overhead of setting up a DMA transfer to only send a few data frames.</para><para>Notes:<itemizedlist>
<listitem><para>Specifying a timeout prevents slave devices from using polling transfers.</para></listitem><listitem><para>Keep in mind that during polling transfers the current task is still being executed; there is no context switch to another task.</para></listitem></itemizedlist>
</para><para><hruler/>
 </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2017-2019,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!***************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/><sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>SPIMSP432E4DMA.h</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>SPI<sp/>driver<sp/>implementation<sp/>for<sp/>a<sp/>MSP432E4<sp/>SPI<sp/>controller<sp/>using</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>micro<sp/>DMA<sp/>controller.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>SPI<sp/>header<sp/>file<sp/>should<sp/>be<sp/>included<sp/>in<sp/>an<sp/>application<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/SPI.h&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>#include<sp/>&lt;ti/drivers/spi/SPIMSP432E4DMA.h&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/>Refer<sp/>to<sp/>@ref<sp/>SPI.h<sp/>for<sp/>a<sp/>complete<sp/>description<sp/>of<sp/>APIs<sp/>&amp;<sp/>example<sp/>of<sp/>use.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>SPI<sp/>driver<sp/>implementation<sp/>is<sp/>designed<sp/>to<sp/>operate<sp/>on<sp/>a<sp/>MSP432E4<sp/>SPI</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>controller<sp/>using<sp/>a<sp/>micro<sp/>DMA<sp/>controller<sp/>in<sp/>ping<sp/>pong<sp/>mode.<sp/>This<sp/>driver</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>allows<sp/>for<sp/>queueing<sp/>multiple<sp/>SPI<sp/>transactions.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Frame<sp/>Formats<sp/>#</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>SPI<sp/>controller<sp/>supports<sp/>4<sp/>phase<sp/>&amp;<sp/>polarity<sp/>formats<sp/>as<sp/>well<sp/>as</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>TI<sp/>synchronous<sp/>serial<sp/>frame<sp/>format.<sp/>Refer<sp/>to<sp/>the<sp/>device<sp/>specific<sp/>data</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>sheets<sp/>&amp;<sp/>technical<sp/>reference<sp/>manuals<sp/>for<sp/>specifics<sp/>on<sp/>each<sp/>format.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>SPI<sp/>Chip<sp/>Select<sp/>#</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>SPI<sp/>controller<sp/>supports<sp/>a<sp/>hardware<sp/>chip<sp/>select<sp/>pin.<sp/>Refer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>device&apos;s<sp/>user<sp/>manual<sp/>on<sp/>how<sp/>this<sp/>hardware<sp/>chip<sp/>select<sp/>pin<sp/>behaves<sp/>in<sp/>regards</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>the<sp/>SPI<sp/>frame<sp/>format.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/>&lt;table&gt;</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/>&lt;th&gt;Chip<sp/>select<sp/>type&lt;/th&gt;</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/>&lt;th&gt;SPI_MASTER<sp/>mode&lt;/th&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/>&lt;th&gt;SPI_SLAVE<sp/>mode&lt;/th&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;Hardware<sp/>chip<sp/>select&lt;/td&gt;</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;No<sp/>action<sp/>is<sp/>needed<sp/>by<sp/>the<sp/>application<sp/>to<sp/>select<sp/>the<sp/>peripheral.&lt;/td&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;See<sp/>the<sp/>device<sp/>documentation<sp/>on<sp/>it&apos;s<sp/>chip<sp/>select<sp/>requirements.&lt;/td&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/>&lt;tr&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;Software<sp/>chip<sp/>select&lt;/td&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;The<sp/>application<sp/>is<sp/>responsible<sp/>to<sp/>ensure<sp/>that<sp/>correct<sp/>SPI<sp/>slave<sp/>is</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>selected<sp/>before<sp/>performing<sp/>a<sp/>SPI_transfer().&lt;/td&gt;</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/>&lt;td&gt;See<sp/>the<sp/>device<sp/>documentation<sp/>on<sp/>it&apos;s<sp/>chip<sp/>select<sp/>requirements.&lt;/td&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/tr&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>&lt;/table&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>SPI<sp/>data<sp/>frames<sp/>#</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/>SPI<sp/>data<sp/>frames<sp/>can<sp/>be<sp/>any<sp/>size<sp/>from<sp/>4-bits<sp/>to<sp/>16-bits.<sp/>If<sp/>the<sp/>dataSize<sp/>in</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/>#SPI_Params<sp/>is<sp/>greater<sp/>than<sp/>8-bits,<sp/>then<sp/>the<sp/>SPIMSP432E4DMA<sp/>driver</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>assume<sp/>that<sp/>the<sp/>#SPI_Transaction<sp/>txBuf<sp/>and<sp/>rxBuf<sp/>point<sp/>to<sp/>16-bit</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/>(uint16_t)<sp/>arrays.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>dataSize<sp/><sp/>|<sp/>buffer<sp/>element<sp/>size<sp/>|</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/>--------<sp/><sp/>|<sp/>-------------------<sp/>|</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>4-8<sp/>bits<sp/><sp/>|<sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>9-16<sp/>bits<sp/>|<sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>Data<sp/>buffers<sp/>in<sp/>transactions<sp/>(rxBuf<sp/>&amp;<sp/>txBuf)<sp/>must<sp/>be<sp/>address<sp/>aligned</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/>according<sp/>to<sp/>the<sp/>data<sp/>frame<sp/>size.<sp/><sp/>For<sp/>example,<sp/>if<sp/>data<sp/>frame<sp/>is<sp/>9-bit<sp/>or</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>larger<sp/>(driver<sp/>assumes<sp/>buffers<sp/>are<sp/>uint16_t)<sp/>rxBuf<sp/>&amp;<sp/>txBuf<sp/>must<sp/>be<sp/>aligned</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/><sp/>on<sp/>a<sp/>16-bit<sp/>address<sp/>boundary.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Interrupts<sp/>#</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>driver<sp/>is<sp/>designed<sp/>to<sp/>make<sp/>use<sp/>of<sp/>the<sp/>micro<sp/>DMA<sp/>for<sp/>transfers.<sp/>The</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>driver<sp/>implementation<sp/>automatically<sp/>installs<sp/>a<sp/>hardware<sp/>interrupt<sp/>service</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>routine<sp/>for<sp/>the<sp/>peripheral<sp/>on<sp/>which<sp/>micro<sp/>DMA<sp/>generates<sp/>IRQ<sp/>once<sp/>all<sp/>data</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>has<sp/>transfered<sp/>from<sp/>memory<sp/>to<sp/>the<sp/>peripheral<sp/>(TX)<sp/>or<sp/>from<sp/>peripheral<sp/>to</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>memory<sp/>(RX).</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>DMA<sp/>and<sp/>Queueing</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>driver<sp/>utilizes<sp/>DMA<sp/>channels<sp/>in<sp/>ping<sp/>pong<sp/>mode<sp/>(see<sp/>device<sp/>TRM)<sp/>in</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/>order<sp/>to<sp/>overcome<sp/>the<sp/>1024<sp/>item<sp/>DMA<sp/>channel<sp/>limit.<sp/>This<sp/>means<sp/>the<sp/>driver</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>execute<sp/>multi<sp/>kilo-item<sp/>transactions<sp/>without<sp/>pausing<sp/>to<sp/>reconfigure<sp/>the</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/>DMA<sp/>and<sp/>causing<sp/>gaps<sp/>in<sp/>transmission.<sp/>In<sp/>addition,<sp/>the<sp/>driver<sp/>also<sp/>allows</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>user<sp/>to<sp/>queue<sp/>up<sp/>transfers<sp/>when<sp/>opened<sp/>in<sp/>#SPI_MODE_CALLBACK<sp/>by<sp/>calling</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/>SPI_transfer()<sp/>multiple<sp/>times.<sp/>Note<sp/>that<sp/>each<sp/>transaction&apos;s</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/>#SPI_Transaction<sp/>struct<sp/>must<sp/>still<sp/>be<sp/>persistent<sp/>and<sp/>unmodified<sp/>until<sp/>that</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/>transaction<sp/>is<sp/>complete.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/>@anchor<sp/>ti_drivers_spi_SPIMSP432E4DMA_example_queueing</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/>Below<sp/>is<sp/>an<sp/>example<sp/>of<sp/>queueing<sp/>three<sp/>transactions</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/>@code</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/>//<sp/>SPI<sp/>already<sp/>opened<sp/>in<sp/>callback<sp/>mode</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>SPI_Transaction<sp/>t0,<sp/>t1,<sp/>t2;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>t0.txBuf<sp/>=<sp/>txBuff0;</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/>t0.rxBuf<sp/>=<sp/>rxBuff0;</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/>t0.count<sp/>=<sp/>2000;</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/>t1.txBuf<sp/>=<sp/>txBuff1;</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/>t1.rxBuf<sp/>=<sp/>rxBuff1;</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/><sp/>t1.count<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>t2.txBuf<sp/>=<sp/>txBuff2;</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/>t2.rxBuf<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/>t2.count<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/>bool<sp/>transferOk<sp/>=<sp/>false;</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>(SPI_transfer(spiHandle,<sp/>&amp;t0))<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SPI_transfer(spiHandle,<sp/>&amp;t1))<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transferOk<sp/>=<sp/>SPI_transfer(spiHandle,<sp/>&amp;t2);</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/>@endcode</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>DMA<sp/>accessible<sp/>memory<sp/>#</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/>As<sp/>this<sp/>driver<sp/>uses<sp/>uDMA<sp/>to<sp/>transfer<sp/>data<sp/>to/from<sp/>data<sp/>buffers,<sp/>it<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/>responsibility<sp/>of<sp/>the<sp/>application<sp/>to<sp/>ensure<sp/>that<sp/>theses<sp/>buffers<sp/>reside<sp/>in</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/>memory<sp/>that<sp/>is<sp/>accessible<sp/>by<sp/>the<sp/>DMA.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>NULL<sp/>Buffers<sp/>#</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>SPI_Transaction.rxBuf<sp/>is<sp/>NULL,<sp/>all<sp/>frames<sp/>received<sp/>will<sp/>be<sp/>discarded.</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>SPI_Transaction.txBuf<sp/>is<sp/>NULL,<sp/>an<sp/>internal<sp/>scratch<sp/>buffer<sp/>is</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/><sp/>initialized<sp/>to<sp/>#SPIMSP432E4DMA_HWAttrs.defaultTxBufValue<sp/>so<sp/>the<sp/>uDMA<sp/>will</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/>send<sp/>some<sp/>known<sp/>value.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/>##<sp/>Polling<sp/>SPI<sp/>transfers<sp/>#</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/>When<sp/>used<sp/>in<sp/>blocking<sp/>mode<sp/>small<sp/>SPI<sp/>transfers<sp/>are<sp/>can<sp/>be<sp/>done<sp/>by<sp/>polling</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>peripheral<sp/>&amp;<sp/>sending<sp/>data<sp/>frame-by-frame.<sp/>For<sp/>master<sp/>devices<sp/>this<sp/>will</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/><sp/>not<sp/>block<sp/>since<sp/>the<sp/>transfer<sp/>can<sp/>happen<sp/>immediately.<sp/>Slaves<sp/>must<sp/>exercise</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/>caution<sp/>since<sp/>the<sp/>call<sp/>will<sp/>poll<sp/>on<sp/>the<sp/>HW<sp/>until<sp/>the<sp/>transfer<sp/>is<sp/>complete.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>this<sp/>reason<sp/>slaves<sp/>with<sp/>a<sp/>transfer<sp/>timeout<sp/>will<sp/>not<sp/>use<sp/>polling</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/>transfers.<sp/>The<sp/>minDmaTransferSize<sp/>field<sp/>in<sp/>the<sp/>hardware<sp/>attributes<sp/>is</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>threshold;<sp/>if<sp/>the<sp/>transaction<sp/>count<sp/>is<sp/>below<sp/>the<sp/>threshold<sp/>a<sp/>polling</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>transfer<sp/>is<sp/>performed;<sp/>otherwise<sp/>a<sp/>DMA<sp/>transfer<sp/>is<sp/>done.<sp/><sp/>This<sp/>is<sp/>intended</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>reduce<sp/>the<sp/>overhead<sp/>of<sp/>setting<sp/>up<sp/>a<sp/>DMA<sp/>transfer<sp/>to<sp/>only<sp/>send<sp/>a<sp/>few</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>data<sp/>frames.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/>Notes:</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Specifying<sp/>a<sp/>timeout<sp/>prevents<sp/>slave<sp/>devices<sp/>from<sp/>using<sp/>polling<sp/>transfers.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>Keep<sp/>in<sp/>mind<sp/>that<sp/>during<sp/>polling<sp/>transfers<sp/>the<sp/>current<sp/>task</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/>is<sp/>still<sp/>being<sp/>executed;<sp/>there<sp/>is<sp/>no<sp/>context<sp/>switch<sp/>to<sp/>another<sp/>task.</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>&lt;hr&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_spi_SPIMSP432E4DMA__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_spi_SPIMSP432E4DMA__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/msp432e4/inc/msp432.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/devices/msp432e4/driverlib/pin_map.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_u_d_m_a_m_s_p432_e4_8h" kindref="compound">ti/drivers/dma/UDMAMSP432E4.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/HwiP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ti/drivers/dpl/SemaphoreP.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_g_p_i_o_m_s_p432_e4_8h" kindref="compound">ti/drivers/gpio/GPIOMSP432E4.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_s_p_i_8h" kindref="compound">ti/drivers/SPI.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PA2_SSI0CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTA,<sp/>2,<sp/>GPIO_PA2_SSI0CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PA3_SSI0FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTA,<sp/>3,<sp/>GPIO_PA3_SSI0FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PA4_SSI0XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTA,<sp/>4,<sp/>GPIO_PA4_SSI0XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PA5_SSI0XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTA,<sp/>5,<sp/>GPIO_PA5_SSI0XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PB5_SSI1CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTB,<sp/>5,<sp/>GPIO_PB5_SSI1CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PB4_SSI1FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTB,<sp/>4,<sp/>GPIO_PB4_SSI1FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PE4_SSI1XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTE,<sp/>4,<sp/>GPIO_PE4_SSI1XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PE5_SSI1XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTE,<sp/>5,<sp/>GPIO_PE5_SSI1XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PD3_SSI2CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTD,<sp/>3,<sp/>GPIO_PD3_SSI2CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PG7_SSI2CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTG,<sp/>7,<sp/>GPIO_PG7_SSI2CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PD2_SSI2FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTD,<sp/>2,<sp/>GPIO_PD2_SSI2FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PG6_SSI2FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTG,<sp/>6,<sp/>GPIO_PG6_SSI2FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PD1_SSI2XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTD,<sp/>1,<sp/>GPIO_PD1_SSI2XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PG5_SSI2XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTG,<sp/>5,<sp/>GPIO_PG5_SSI2XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PD0_SSI2XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTD,<sp/>0,<sp/>GPIO_PD0_SSI2XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PG4_SSI2XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTG,<sp/>4,<sp/>GPIO_PG4_SSI2XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PQ0_SSI3CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTQ,<sp/>0,<sp/>GPIO_PQ0_SSI3CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PF3_SSI3CLK<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTF,<sp/>3,<sp/>GPIO_PF3_SSI3CLK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PQ1_SSI3FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTQ,<sp/>1,<sp/>GPIO_PQ1_SSI3FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PF2_SSI3FSS<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTF,<sp/>2,<sp/>GPIO_PF2_SSI3FSS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PQ2_SSI3XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTQ,<sp/>2,<sp/>GPIO_PQ2_SSI3XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PF1_SSI3XDAT0<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTF,<sp/>1,<sp/>GPIO_PF1_SSI3XDAT0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PQ3_SSI3XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTQ,<sp/>3,<sp/>GPIO_PQ3_SSI3XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PF0_SSI3XDAT1<sp/>GPIOMSP432E4_pinConfigMask(GPIOMSP432E4_PORTF,<sp/>0,<sp/>GPIO_PF0_SSI3XDAT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="_s_p_i_m_s_p432_e4_d_m_a_8h_1ae2bb4bf8fcafd5d8b30e881f97edbc79" refkind="member"><highlight class="preprocessor">#define<sp/>SPIMSP432E4_PIN_NO_CONFIG<sp/><sp/><sp/><sp/>(0xFFFFFFFF)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="comment">/*<sp/>Add<sp/>SPIMSP432E4DMA_STATUS_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="comment">/*<sp/>Add<sp/>SPIMSP432E4DMA_CMD_*<sp/>macros<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="comment">/*<sp/>SPI<sp/>function<sp/>table<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_s_p_i___fxn_table" kindref="compound">SPI_FxnTable</ref><sp/><ref refid="_s_p_i_m_s_p432_e4_d_m_a_8h_1a3654610d892fa54e3c7ff2ef7586fc16" kindref="member">SPIMSP432E4DMA_fxnTable</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="422" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a4ab3ae31e1039ef03d4937b853029f6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a4ab3ae31e1039ef03d4937b853029f6a" kindref="member">baseAddr</ref>;</highlight></codeline>
<codeline lineno="424" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa8fd1df9d1f8ccf2289f3ace59522937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa8fd1df9d1f8ccf2289f3ace59522937" kindref="member">intNum</ref>;</highlight></codeline>
<codeline lineno="426" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1ae8ff4979f5e325cc00d8a47bb6c7f86b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1ae8ff4979f5e325cc00d8a47bb6c7f86b" kindref="member">intPriority</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="429" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a11d6435efc881369be7124a6ae976da2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>*<ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a11d6435efc881369be7124a6ae976da2" kindref="member">scratchBufPtr</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="432" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a0f097b5ac5669ce75e2c5cb770f55863" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a0f097b5ac5669ce75e2c5cb770f55863" kindref="member">defaultTxBufValue</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="435" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a5237b2dd38a70fdbf9495c8f1d41ec7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a5237b2dd38a70fdbf9495c8f1d41ec7c" kindref="member">rxDmaChannel</ref>;</highlight></codeline>
<codeline lineno="437" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa34547332587d8e59d4d691ffff51176" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa34547332587d8e59d4d691ffff51176" kindref="member">txDmaChannel</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aaddfd7ea36e7e2be1630da5b2589210d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aaddfd7ea36e7e2be1630da5b2589210d" kindref="member">minDmaTransferSize</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa566f674b12ed8599f62575f890e518e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1aa566f674b12ed8599f62575f890e518e" kindref="member">clkPinMask</ref>;</highlight></codeline>
<codeline lineno="445" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a9bafd93e90f6cabd549a8b1348c6f45d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a9bafd93e90f6cabd549a8b1348c6f45d" kindref="member">fssPinMask</ref>;</highlight></codeline>
<codeline lineno="447" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a2b6a88b2806bb133e8a567188159328a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1a2b6a88b2806bb133e8a567188159328a" kindref="member">xdat0PinMask</ref>;</highlight></codeline>
<codeline lineno="449" refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1af53a0a0dd5657900fc3f028e463b4c1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs_1af53a0a0dd5657900fc3f028e463b4c1a" kindref="member">xdat1PinMask</ref>;</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}<sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___h_w_attrs" kindref="compound">SPIMSP432E4DMA_HWAttrs</ref>;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="459" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a76013d9fc6073c983b91b427422897af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>HwiP_Handle<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a76013d9fc6073c983b91b427422897af" kindref="member">hwiHandle</ref>;</highlight></codeline>
<codeline lineno="460" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a00bd47e07209bc05dc7b810916d6a25e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>SemaphoreP_Handle<sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a00bd47e07209bc05dc7b810916d6a25e" kindref="member">transferComplete</ref>;</highlight></codeline>
<codeline lineno="461" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a69599292c96f137467f750d40cb5edea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_p_i_8h_1a207e2d5a7e7ea5606b6995b6485ca015" kindref="member">SPI_CallbackFxn</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a69599292c96f137467f750d40cb5edea" kindref="member">transferCallbackFxn</ref>;</highlight></codeline>
<codeline lineno="462" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a6addf4f99dedde8e93e3d8489ee0ee4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_u_d_m_a_m_s_p432_e4___config" kindref="compound">UDMAMSP432E4_Handle</ref><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a6addf4f99dedde8e93e3d8489ee0ee4d" kindref="member">dmaHandle</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a9f00e6f25c4f2a90b4249719f4ca6904" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i___transaction" kindref="compound">SPI_Transaction</ref><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a9f00e6f25c4f2a90b4249719f4ca6904" kindref="member">headPtr</ref>;</highlight></codeline>
<codeline lineno="465" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2daa408c493c8b296f48ca0eeec9434c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i___transaction" kindref="compound">SPI_Transaction</ref><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2daa408c493c8b296f48ca0eeec9434c" kindref="member">tailPtr</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1aaa29ad3a20b97612aec6c5f843aa096a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1aaa29ad3a20b97612aec6c5f843aa096a" kindref="member">framesQueued</ref>;</highlight></codeline>
<codeline lineno="468" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1ae4dd5c4fdb9fc4a22b83fd94c9ee7c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1ae4dd5c4fdb9fc4a22b83fd94c9ee7c43" kindref="member">framesTransferred</ref>;</highlight></codeline>
<codeline lineno="469" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1abca7dc2f9c1d216ece7c6dc28d95e90f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1abca7dc2f9c1d216ece7c6dc28d95e90f" kindref="member">priTransferSize</ref>;</highlight></codeline>
<codeline lineno="470" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a73574821b78f98ae0630e7d25081ac0d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a73574821b78f98ae0630e7d25081ac0d" kindref="member">altTransferSize</ref>;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a0127c503d8cd9cce7e47dca63683252f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a0127c503d8cd9cce7e47dca63683252f" kindref="member">bitRate</ref>;</highlight></codeline>
<codeline lineno="473" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a880babc8d89f410a567aff43cb358b64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a880babc8d89f410a567aff43cb358b64" kindref="member">dataSize</ref>;</highlight></codeline>
<codeline lineno="474" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a5fd4d9b2dc64b5b4b7905ebbb86d199e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a5fd4d9b2dc64b5b4b7905ebbb86d199e" kindref="member">transferTimeout</ref>;</highlight></codeline>
<codeline lineno="475" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2970bce79404e05f5bf771556d0bd22f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2970bce79404e05f5bf771556d0bd22f" kindref="member">activeChannel</ref>;</highlight></codeline>
<codeline lineno="476" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1ad31544f4bd9be5ad603378f04fdd027c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1ad31544f4bd9be5ad603378f04fdd027c" kindref="member">busyBit</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1aea34868a493edee0168401795a5cb8c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1aea34868a493edee0168401795a5cb8c3" kindref="member">rxScratchBuf</ref>;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a5a6e7df0f60196edee706a9033e1610f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_p_i_8h_1a60a7e3d74577b38aa79ea6983362f942" kindref="member">SPI_Mode</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a5a6e7df0f60196edee706a9033e1610f" kindref="member">spiMode</ref>;</highlight></codeline>
<codeline lineno="481" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2e069553c2c4f6a2406e6497800c3154" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_s_p_i_8h_1ab9ea76c6529d6076eee5e1c4a5a92c6f" kindref="member">SPI_TransferMode</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a2e069553c2c4f6a2406e6497800c3154" kindref="member">transferMode</ref>;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a1d8f91d5a10228b3e20f7ad2add8a518" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a1d8f91d5a10228b3e20f7ad2add8a518" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="484" refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a28e1591fbf81c2da3d3d56a31222f9e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object_1a28e1591fbf81c2da3d3d56a31222f9e3" kindref="member">isOpen</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}<sp/><ref refid="struct_s_p_i_m_s_p432_e4_d_m_a___object" kindref="compound">SPIMSP432E4DMA_Object</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_spi_SPIMSP432E4DMA__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432e4/source/ti/drivers/spi/SPIMSP432E4DMA.h"/>
  </compounddef>
</doxygen>

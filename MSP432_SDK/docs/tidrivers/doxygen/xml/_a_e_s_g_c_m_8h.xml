<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_a_e_s_g_c_m_8h" kind="file" language="C++">
    <compoundname>AESGCM.h</compoundname>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_crypto_key_8h" local="no">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</includes>
    <includedby refid="_a_e_s_g_c_m_m_s_p432_e4_8h" local="no">AESGCMMSP432E4.h</includedby>
    <incdepgraph>
      <node id="100">
        <label>stdbool.h</label>
      </node>
      <node id="103">
        <label>ti/drivers/cryptoutils/cryptokey/CryptoKey.h</label>
        <link refid="_crypto_key_8h"/>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
      </node>
      <node id="102">
        <label>stdint.h</label>
      </node>
      <node id="99">
        <label>AESGCM.h</label>
        <link refid="_a_e_s_g_c_m_8h"/>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="101">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="104">
        <label>AESGCM.h</label>
        <link refid="_a_e_s_g_c_m_8h"/>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
      <node id="105">
        <label>AESGCMMSP432E4.h</label>
        <link refid="_a_e_s_g_c_m_m_s_p432_e4_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_e_s_g_c_m___config" prot="public">AESGCM_Config</innerclass>
    <innerclass refid="struct_a_e_s_g_c_m___operation" prot="public">AESGCM_Operation</innerclass>
    <innerclass refid="struct_a_e_s_g_c_m___params" prot="public">AESGCM_Params</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1a4c11eb3acc40e87633c5921ddcb367cc" prot="public" static="no">
        <name>AESGCM_STATUS_RESERVED</name>
        <initializer>(-32)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Common AESGCM status code reservation offset. AESGCM driver implementations should offset status codes with AESGCM_STATUS_RESERVED growing negatively.</para><para>Example implementation specific status codes: <programlisting><codeline><highlight class="normal">#define<sp/>AESGCMXYZ_STATUS_ERROR0<sp/><sp/><sp/><sp/>AESGCM_STATUS_RESERVED<sp/>-<sp/>0</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESGCMXYZ_STATUS_ERROR1<sp/><sp/><sp/><sp/>AESGCM_STATUS_RESERVED<sp/>-<sp/>1</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESGCMXYZ_STATUS_ERROR2<sp/><sp/><sp/><sp/>AESGCM_STATUS_RESERVED<sp/>-<sp/>2</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="329" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="329" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1aca8f2f76739e5403a8b465da4a0e9379" prot="public" static="no">
        <name>AESGCM_STATUS_SUCCESS</name>
        <initializer>(0)</initializer>
        <briefdescription>
<para>Successful status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESGCM_STATUS_SUCCESS if the function was executed successfully. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="337" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1a5c7c063df15cb19f2176358681dbe963" prot="public" static="no">
        <name>AESGCM_STATUS_ERROR</name>
        <initializer>(-1)</initializer>
        <briefdescription>
<para>Generic error status code. </para>        </briefdescription>
        <detaileddescription>
<para>Functions return AESGCM_STATUS_ERROR if the function was not executed successfully and no more pertinent error code could be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="345" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1a09267071cac6f0e9cceddf1fb85049d4" prot="public" static="no">
        <name>AESGCM_STATUS_RESOURCE_UNAVAILABLE</name>
        <initializer>(-2)</initializer>
        <briefdescription>
<para>An error status code returned if the hardware or software resource is currently unavailable. </para>        </briefdescription>
        <detaileddescription>
<para>AESGCM driver implementations may have hardware or software limitations on how many clients can simultaneously perform operations. This status code is returned if the mutual exclusion mechanism signals that an operation cannot currently be performed. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="355" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1a0afeb773b5c22467af1019b0361dc3e4" prot="public" static="no">
        <name>AESGCM_STATUS_MAC_INVALID</name>
        <initializer>(-3)</initializer>
        <briefdescription>
<para>An error status code returned if the MAC provided by the application for a decryption operation does not match the one calculated during the operation. </para>        </briefdescription>
        <detaileddescription>
<para>This code is returned by <ref refid="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" kindref="member">AESGCM_oneStepDecrypt()</ref> if the verification of the MAC fails. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="364" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_a_e_s_g_c_m_8h_1ae02f2ab16e0c9e15fb6670528de97118" prot="public" static="no">
        <name>AESGCM_STATUS_CANCELED</name>
        <initializer>(-4)</initializer>
        <briefdescription>
<para>The ongoing operation was canceled. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="369" column="9" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="369" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145" prot="public" static="no">
        <name>AESGCM_ReturnBehavior</name>
        <enumvalue id="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a956aafcfb3b1293e1e51bc84bd21dfc0" prot="public">
          <name>AESGCM_RETURN_BEHAVIOR_CALLBACK</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will return immediately while the GCM operation goes on in the background. The registered callback function is called after the operation completes. The context the callback function is called (task, HWI, SWI) is implementation-dependent. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a94ec72fe16e4cd2511b20f9ff8f99026" prot="public">
          <name>AESGCM_RETURN_BEHAVIOR_BLOCKING</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will block while the GCM operation goes on in the background. GCM operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145ad3d5fdbf9caca9ce5c9ce9380cf2d202" prot="public">
          <name>AESGCM_RETURN_BEHAVIOR_POLLING</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The function call will continuously poll a flag while GCM operation goes on in the background. GCM operation results are available after the function returns. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>The way in which GCM function calls return after performing an encryption + authentication or decryption + verification operation. </para>        </briefdescription>
        <detaileddescription>
<para>Not all GCM operations exhibit the specified return behavor. Functions that do not require significant computation and cannot offload that computation to a background thread behave like regular functions. Which functions exhibit the specfied return behavior is not implementation dependent. Specifically, a software-backed implementation run on the same CPU as the application will emulate the return behavior while not actually offloading the computation to the background thread.</para><para>AESGCM functions exhibiting the specified return behavior have restrictions on the context from which they may be called.</para><para><table rows="4" cols="4"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para>Task </para></entry><entry thead="yes"><para>Hwi </para></entry><entry thead="yes"><para>Swi  </para></entry></row>
<row>
<entry thead="no"><para>AESGCM_RETURN_BEHAVIOR_CALLBACK </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
<row>
<entry thead="no"><para>AESGCM_RETURN_BEHAVIOR_BLOCKING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para></para></entry><entry thead="no"><para></para></entry></row>
<row>
<entry thead="no"><para>AESGCM_RETURN_BEHAVIOR_POLLING </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry><entry thead="no"><para>X </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="416" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="416" bodyend="431"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8" prot="public" static="no">
        <name>AESGCM_Mode</name>
        <enumvalue id="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ad528f2f1ac8fd56adbcaf2a205c649ce" prot="public">
          <name>AESGCM_MODE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ae14730c470a9995870f3f72e0cc09c4c" prot="public">
          <name>AESGCM_MODE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the direction of the GCM operation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="436" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="enum" id="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86" prot="public" static="no">
        <name>AESGCM_OperationType</name>
        <enumvalue id="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86aaef2721c0d4a24bb1e3e4c24a7565963" prot="public">
          <name>AESGCM_OPERATION_TYPE_ENCRYPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86a9094bc77d234fe95e2d664a9cc555b65" prot="public">
          <name>AESGCM_OPERATION_TYPE_DECRYPT</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum for the operation types supported by the driver. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="497" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="497" bodyend="500"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" prot="public" static="no">
        <type><ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref> *</type>
        <definition>typedef AESGCM_Config* AESGCM_Handle</definition>
        <argsstring></argsstring>
        <name>AESGCM_Handle</name>
        <briefdescription>
<para>A handle that is returned from an <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> call. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="393" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_a_e_s_g_c_m_8h_1a93425ed5237036ac28f882518d702013" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* AESGCM_CallbackFxn) (AESGCM_Handle handle, int_fast16_t returnValue, AESGCM_Operation *operation, AESGCM_OperationType operationType)</definition>
        <argsstring>)(AESGCM_Handle handle, int_fast16_t returnValue, AESGCM_Operation *operation, AESGCM_OperationType operationType)</argsstring>
        <name>AESGCM_CallbackFxn</name>
        <briefdescription>
<para>The definition of a callback function used by the AESGCM driver when used in <ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a956aafcfb3b1293e1e51bc84bd21dfc0" kindref="member">AESGCM_RETURN_BEHAVIOR_CALLBACK</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the client that started the GCM operation.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnValue</parametername>
</parameternamelist>
<parameterdescription>
<para>The result of the GCM operation. May contain an error code. Informs the application of why the callback function was called.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an operation struct.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operationType</parametername>
</parameternamelist>
<parameterdescription>
<para>This parameter determines which operation the callback refers to. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="517" column="1" bodyfile="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" bodystart="517" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_a_e_s_g_c_m_8h_1a1e53ae163c5726e54da103f77463c820" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref></type>
        <definition>const AESGCM_Params AESGCM_defaultParams</definition>
        <argsstring></argsstring>
        <name>AESGCM_defaultParams</name>
        <briefdescription>
<para>Default <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1a6797cf0b48d6455adb41c65a42de11dd" kindref="member">AESGCM_Params_init()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="546" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a997f24b0b4b6dc5c425df8dfe2ceadfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESGCM_init</definition>
        <argsstring>(void)</argsstring>
        <name>AESGCM_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>This function initializes the GCM module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>The AESGCM_config structure must exist and be persistent before this function can be called. This function must also be called before any other GCM driver APIs. This function call does not modify any peripheral registers. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a6797cf0b48d6455adb41c65a42de11dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESGCM_Params_init</definition>
        <argsstring>(AESGCM_Params *params)</argsstring>
        <name>AESGCM_Params_init</name>
        <param>
          <type><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Function to initialize the <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>An pointer to <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are: returnBehavior = AESGCM_RETURN_BEHAVIOR_BLOCKING callbackFxn = NULL timeout = SemaphoreP_WAIT_FOREVER custom = NULL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
        <definition>AESGCM_Handle AESGCM_open</definition>
        <argsstring>(uint_least8_t index, const AESGCM_Params *params)</argsstring>
        <name>AESGCM_open</name>
        <param>
          <type>uint_least8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>This function opens a given GCM peripheral. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>GCM controller has been initialized using <ref refid="_a_e_s_g_c_m_8h_1a997f24b0b4b6dc5c425df8dfe2ceadfa" kindref="member">AESGCM_init()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Logical peripheral number for the GCM indexed into the AESGCM_config table</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an parameter block, if NULL it will use default values.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An AESGCM_Handle on success or a NULL on an error or if it has been opened already.</para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1a997f24b0b4b6dc5c425df8dfe2ceadfa" kindref="member">AESGCM_init()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1ab8ccb816d0e609a87bcb08c10b0185a3" kindref="member">AESGCM_close()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1ab8ccb816d0e609a87bcb08c10b0185a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESGCM_close</definition>
        <argsstring>(AESGCM_Handle handle)</argsstring>
        <name>AESGCM_close</name>
        <param>
          <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Function to close a GCM peripheral specified by the GCM handle. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para><ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> has to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A GCM handle returned from <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void AESGCM_Operation_init</definition>
        <argsstring>(AESGCM_Operation *operationStruct)</argsstring>
        <name>AESGCM_Operation_init</name>
        <param>
          <type><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> *</type>
          <declname>operationStruct</declname>
        </param>
        <briefdescription>
<para>Function to initialize an <ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> struct to its defaults. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>operationStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to an <ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> structure for initialization</para></parameterdescription>
</parameteritem>
</parameterlist>
Defaults values are all zeros. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a8d10ed85034fdcfb0cc92acec0cfa12e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESGCM_oneStepEncrypt</definition>
        <argsstring>(AESGCM_Handle handle, AESGCM_Operation *operationStruct)</argsstring>
        <name>AESGCM_oneStepEncrypt</name>
        <param>
          <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> *</type>
          <declname>operationStruct</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESGCM encryption + authentication operation in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted ciphertext or incorrect authentication.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> and <ref refid="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" kindref="member">AESGCM_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A GCM handle returned from <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operationStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1aca8f2f76739e5403a8b465da4a0e9379" kindref="member">AESGCM_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1a5c7c063df15cb19f2176358681dbe963" kindref="member">AESGCM_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1a09267071cac6f0e9cceddf1fb85049d4" kindref="member">AESGCM_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1ae02f2ab16e0c9e15fb6670528de97118" kindref="member">AESGCM_STATUS_CANCELED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" kindref="member">AESGCM_oneStepDecrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESGCM_oneStepDecrypt</definition>
        <argsstring>(AESGCM_Handle handle, AESGCM_Operation *operationStruct)</argsstring>
        <name>AESGCM_oneStepDecrypt</name>
        <param>
          <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> *</type>
          <declname>operationStruct</declname>
        </param>
        <briefdescription>
<para>Function to perform an AESGCM decryption + verification operation in one call. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>None of the buffers provided as arguments may be altered by the application during an ongoing operation. Doing so can yield corrupted plaintext or incorrectly failed verification.</para></simplesect>
<simplesect kind="pre"><para><ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> and <ref refid="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" kindref="member">AESGCM_Operation_init()</ref> have to be called first.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">handle</parametername>
</parameternamelist>
<parameterdescription>
<para>A GCM handle returned from <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">operationStruct</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct containing the parameters required to perform the operation.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1aca8f2f76739e5403a8b465da4a0e9379" kindref="member">AESGCM_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation succeeded. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1a5c7c063df15cb19f2176358681dbe963" kindref="member">AESGCM_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation failed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1a09267071cac6f0e9cceddf1fb85049d4" kindref="member">AESGCM_STATUS_RESOURCE_UNAVAILABLE</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The required hardware resource was not available. Try again later. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1ae02f2ab16e0c9e15fb6670528de97118" kindref="member">AESGCM_STATUS_CANCELED</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_g_c_m_8h_1a0afeb773b5c22467af1019b0361dc3e4" kindref="member">AESGCM_STATUS_MAC_INVALID</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The provided MAC did no match the recomputed one.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="_a_e_s_g_c_m_8h_1a8d10ed85034fdcfb0cc92acec0cfa12e" kindref="member">AESGCM_oneStepEncrypt()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="653" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1a8898853d26da1c3adb0ea8bf11e811c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int_fast16_t</type>
        <definition>int_fast16_t AESGCM_cancelOperation</definition>
        <argsstring>(AESGCM_Handle handle)</argsstring>
        <name>AESGCM_cancelOperation</name>
        <param>
          <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <briefdescription>
<para>Cancels an ongoing AESGCM operation. </para>        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000006"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This function will be deprecated in the 3Q20 SDK release. The asynchronicity of the function can not be handled by all accelerators.</para></xrefdescription></xrefsect></para><para>Asynchronously cancels an AESGCM operation. Only available when using AESGCM_RETURN_BEHAVIOR_CALLBACK or AESGCM_RETURN_BEHAVIOR_BLOCKING. The operation will terminate as though an error occured. The return status code of the operation will be AESGCM_STATUS_CANCELED.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle of the operation to cancel</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_b_c_8h_1a0bcb271aa7f9aee37469d242670b6d9d" kindref="member">AESCBC_STATUS_SUCCESS</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was canceled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="_a_e_s_c_b_c_8h_1a114c760826307af69a93538773a58185" kindref="member">AESCBC_STATUS_ERROR</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>The operation was not canceled. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_a_e_s_g_c_m_8h_1abecd438abea41b06c5670a222e9275bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref></type>
        <definition>AESGCM_Handle AESGCM_construct</definition>
        <argsstring>(AESGCM_Config *config, const AESGCM_Params *params)</argsstring>
        <name>AESGCM_construct</name>
        <param>
          <type><ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type>const <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> *</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Constructs a new AESGCM object. </para>        </briefdescription>
        <detaileddescription>
<para>Unlike <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref>, <ref refid="_a_e_s_g_c_m_8h_1abecd438abea41b06c5670a222e9275bf" kindref="member">AESGCM_construct()</ref> does not require the hwAttrs and object to be allocated in a <ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref> array that is indexed into. Instead, the <ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref>, hwAttrs, and object can be allocated at any location. This allows for relatively simple run-time allocation of temporary driver instances on the stack or the heap. The drawback is that this makes it more difficult to write device-agnostic code. If you use an ifdef with DeviceFamily, you can choose the correct object and hwAttrs to allocate. That compilation unit will be tied to the device it was compiled for at this point. To change devices, recompilation of the application with a different DeviceFamily setting is necessary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref> describing the location of the object and hwAttrs.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>params</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> to configure the driver instance.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns a <ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref> on success or NULL on failure.</para></simplesect>
<simplesect kind="pre"><para>The object struct <computeroutput>config</computeroutput> points to must be zeroed out prior to calling this function. Otherwise, unexpected behavior may ensue. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h" line="696" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>AESGCM driver header. </para>    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para><para><anchor id="_a_e_s_g_c_m_8h_1ti_drivers_AESGCM_Overview"/><heading level="3">Overview</heading>
</para><para>The Galois Counter Mode (GCM) mode of operation is a generic authenticated encryption with associated data (AEAD) block cipher mode. It can be implemented with any block cipher. AESGCM combines GHASH with the AES block cipher in CTR mode of operation.</para><para>This combination of block cipher modes enables GCM to encrypt messages of any length and not only multiples of the block cipher block size.</para><para>CTR provides confidentiality. The using GHASH and encrypting the result provides message integrity and authentication.</para><para>The AES key is a shared secret between the two parties and has a length of 128, 192, or 256 bits.</para><para>The IV is generated by the party performing the authenticated encryption operation. Within the scope of any authenticated encryption key, the IV value must be unique. That is, the set of IV values used with any given key must not contain any duplicate values. Using the same IV for two different messages encrypted with the same key destroys the security properties of GCM.</para><para>The optional additional authentication data (AAD) is authenticated but not encrypted. Thus, the AAD is not included in the AES-GCM output. It can be used to authenticate packet headers, timestamps and other metadata.</para><para>After the encryption operation, the ciphertext contains the encrypted data and the message authentication code (MAC).</para><para>GCM is highly performant for an AEAD mode. Counter with CBC-MAC requires one invocation per block of AAD and two invocations of the block cipher per proccessed block of input; one to compute the CBC-MAC and one to perform CTR. GCM substitutes the block cipher invocation during CBC-MAC computation with computing GHASH over the same input. GHASH is significantly faster per block than AES. In turn, this gives GCM a performance edge over CCM.</para><para><heading level="3">Security Considerations</heading>
</para><para>In each operation, GCM limits the length of the input and AAD to guarantee its security properties:<itemizedlist>
<listitem><para>inputLength &lt;= 2^36 - 32 bytes</para></listitem><listitem><para>aadLength &lt;= 2^61 - 1 bytes</para></listitem></itemizedlist>
</para><para>The security properties of GCM rely on the MAC size. While MAC lengths of [4, 8, 12, 13, 14, 15, 16] bytes are permitted, it is recommended to use the full 16-byte MAC.</para><para>See NIST SP 800-38D for more a more detailed discussion of security considerations.</para><para><anchor id="_a_e_s_g_c_m_8h_1ti_drivers_AESGCM_Usage"/><heading level="3">Usage</heading>
</para><para><heading level="4">Before starting a GCM operation</heading>
</para><para>Before starting a GCM operation, the application must do the following:<itemizedlist>
<listitem><para>Call <ref refid="_a_e_s_g_c_m_8h_1a997f24b0b4b6dc5c425df8dfe2ceadfa" kindref="member">AESGCM_init()</ref> to initialize the driver</para></listitem><listitem><para>Call <ref refid="_a_e_s_g_c_m_8h_1a6797cf0b48d6455adb41c65a42de11dd" kindref="member">AESGCM_Params_init()</ref> to initialize the <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> to default values.</para></listitem><listitem><para>Modify the <ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref> as desired</para></listitem><listitem><para>Call <ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open()</ref> to open an instance of the driver</para></listitem><listitem><para>Initialize a <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. These opaque datastructures are representations of keying material and its storage. Depending on how the keying material is stored (RAM or flash, key store, key blob), the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> must be initialized differently. The AESGCM API can handle all types of <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. However, not all device-specific implementions support all types of <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. Devices without a key store will not support CryptoKeys with keying material stored in a key store for example. All devices support plaintext CryptoKeys.</para></listitem><listitem><para>Initialise the <ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref> using <ref refid="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" kindref="member">AESGCM_Operation_init()</ref> and set all length, key, and buffer fields.</para></listitem></itemizedlist>
</para><para><heading level="4">Starting a GCM operation</heading>
</para><para>The <ref refid="_a_e_s_g_c_m_8h_1a8d10ed85034fdcfb0cc92acec0cfa12e" kindref="member">AESGCM_oneStepEncrypt()</ref> and <ref refid="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" kindref="member">AESGCM_oneStepDecrypt()</ref> functions perform a GCM operation in a single call.</para><para>When performing a decryption operation with <ref refid="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" kindref="member">AESGCM_oneStepDecrypt()</ref>, the MAC is automatically verified.</para><para><heading level="4">After the GCM operation completes</heading>
</para><para>After the GCM operation completes, the application should either start another operation or close the driver by calling <ref refid="_a_e_s_g_c_m_8h_1ab8ccb816d0e609a87bcb08c10b0185a3" kindref="member">AESGCM_close()</ref></para><para><anchor id="_a_e_s_g_c_m_8h_1ti_drivers_AESGCM_Synopsis"/><heading level="2">Synopsis</heading>
</para><para><anchor id="_a_e_s_g_c_m_8h_1ti_drivers_AESGCM_Synopsis_Code"/><programlisting><codeline><highlight class="normal">//<sp/>Import<sp/>AESGCM<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Define<sp/>name<sp/>for<sp/>AESGCM<sp/>channel<sp/>index</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>AESGCM_INSTANCE<sp/>0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_init();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESGCM_open(AESGCM_INSTANCE,<sp/>NULL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Initialize<sp/>symmetric<sp/>key</highlight></codeline>
<codeline><highlight class="normal">CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Set<sp/>up<sp/>AESGCM_Operation</highlight></codeline>
<codeline><highlight class="normal">AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline><highlight class="normal">operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline><highlight class="normal">operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline><highlight class="normal">operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal">operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal">operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline><highlight class="normal">operation.nonce<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>nonce;</highlight></codeline>
<codeline><highlight class="normal">operation.nonceLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(nonce);</highlight></codeline>
<codeline><highlight class="normal">operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline><highlight class="normal">operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">encryptionResult<sp/>=<sp/>AESGCM_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_close(handle);</highlight></codeline>
</programlisting></para><para><anchor id="_a_e_s_g_c_m_8h_1ti_drivers_AESGCM_Examples"/><heading level="4">Examples</heading>
</para><para><heading level="5">Single call GCM encryption + authentication with plaintext <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> in blocking return mode</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal">CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">int_fast16_t<sp/>encryptionResult;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>iv[12]<sp/>=<sp/>&quot;12-byte<sp/>IV<sp/><sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>aad[]<sp/>=<sp/>&quot;This<sp/>string<sp/>will<sp/>be<sp/>authenticated<sp/>but<sp/>not<sp/>encrypted.&quot;;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[]<sp/>=<sp/>&quot;This<sp/>string<sp/>will<sp/>be<sp/>encrypted<sp/>and<sp/>authenticated.&quot;;</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>mac[16];</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[sizeof(plaintext)];</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[32]<sp/>=<sp/>{0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0A,<sp/>0x0B,<sp/>0x0C,<sp/>0x0D,<sp/>0x0E,<sp/>0x0F,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1A,<sp/>0x1B,<sp/>0x1C,<sp/>0x1D,<sp/>0x1E,<sp/>0x1F};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">handle<sp/>=<sp/>AESGCM_open(0,<sp/>NULL);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_Operation<sp/>operation;</highlight></codeline>
<codeline><highlight class="normal">AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal">operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline><highlight class="normal">operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline><highlight class="normal">operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal">operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal">operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline><highlight class="normal">operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline><highlight class="normal">operation.ivLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>12;</highlight></codeline>
<codeline><highlight class="normal">operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline><highlight class="normal">operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">encryptionResult<sp/>=<sp/>AESGCM_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">if<sp/>(encryptionResult<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_close(handle);</highlight></codeline>
</programlisting></para><para><heading level="5">Single call GCM decryption + verification with plaintext <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> in callback return mode</heading>
</para><para><programlisting><codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>following<sp/>test<sp/>vector<sp/>is<sp/>Packet<sp/>Vector<sp/>1<sp/>from<sp/>RFC<sp/>3610<sp/>of<sp/>the<sp/>IETF.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">uint8_t<sp/>iv[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x1f,<sp/>0x80,<sp/>0x3c,<sp/>0x52,<sp/>0xca,<sp/>0xc4,<sp/>0x97,<sp/>0xe1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x55,<sp/>0xaa,<sp/>0x55,<sp/>0x2d};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>aad[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x3b,<sp/>0xba,<sp/>0x31,<sp/>0x28,<sp/>0x9d,<sp/>0x05,<sp/>0xf5,<sp/>0x0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xed,<sp/>0x6c,<sp/>0x53,<sp/>0x35,<sp/>0x3c,<sp/>0x1f,<sp/>0x74,<sp/>0xd8,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x28,<sp/>0xa9,<sp/>0x96,<sp/>0xb8,<sp/>0xd6,<sp/>0x84,<sp/>0xfe,<sp/>0x64,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7f,<sp/>0x7c,<sp/>0x40,<sp/>0xc0,<sp/>0xd5,<sp/>0x68,<sp/>0x8c,<sp/>0x89,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x68,<sp/>0x1a,<sp/>0x33,<sp/>0xb1,<sp/>0x0c,<sp/>0xb7,<sp/>0x14,<sp/>0xb6,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x49,<sp/>0x0b,<sp/>0xdf,<sp/>0x1f,<sp/>0x16,<sp/>0x60,<sp/>0x60,<sp/>0xa7};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>mac[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x39,<sp/>0x03,<sp/>0xe4,<sp/>0xdc,<sp/>0xa4,<sp/>0xe7,<sp/>0xc8,<sp/>0x21,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x62,<sp/>0x1a,<sp/>0xbb,<sp/>0xb2,<sp/>0x37,<sp/>0x2c,<sp/>0x97};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>ciphertext[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0xf8,<sp/>0x7e,<sp/>0xf7,<sp/>0x99,<sp/>0x4a,<sp/>0x86,<sp/>0xf3,<sp/>0xe9,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xa3,<sp/>0xab,<sp/>0x6a,<sp/>0x6f,<sp/>0x2d,<sp/>0x34,<sp/>0x3b,<sp/>0xbd};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>keyingMaterial[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x4f,<sp/>0xd7,<sp/>0xf2,<sp/>0x09,<sp/>0xdf,<sp/>0xb0,<sp/>0xdf,<sp/>0xbd,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xd9,<sp/>0x8d,<sp/>0x2d,<sp/>0xb4,<sp/>0x98,<sp/>0x66,<sp/>0x4c,<sp/>0x88};</highlight></codeline>
<codeline><highlight class="normal">uint8_t<sp/>plaintext[sizeof(ciphertext)];</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>The<sp/>plaintext<sp/>should<sp/>be<sp/>the<sp/>following<sp/>after<sp/>the<sp/>decryption<sp/>operation:</highlight></codeline>
<codeline><highlight class="normal">//<sp/>0x17,<sp/>0x9d,<sp/>0xcb,<sp/>0x79,<sp/>0x5c,<sp/>0x09,<sp/>0x8f,<sp/>0xc5,<sp/>0x31,<sp/>0x4b,<sp/>0xde,<sp/>0x0d,<sp/>0x39,<sp/>0x9d,<sp/>0x7a,<sp/>0x10</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>gcmCallback(AESGCM_Handle<sp/>handle,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESGCM_Operation<sp/>*operation,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESGCM_OperationType<sp/>operationType)<sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(returnValue<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">AESGCM_Operation<sp/>operation;</highlight></codeline>
<codeline><highlight class="normal">CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">void<sp/>gcmStartFunction(void)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESGCM_Handle<sp/>handle;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESGCM_Params<sp/>params;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>int_fast16_t<sp/>decryptionResult;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESGCM_Params_init(&amp;params);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.returnBehavior<sp/>=<sp/>AESGCM_RETURN_BEHAVIOR_CALLBACK;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>gcmCallback;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESGCM_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(ciphertext);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>decryptionResult<sp/>=<sp/>AESGCM_oneStepDecrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(decryptionResult<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>do<sp/>other<sp/>things<sp/>while<sp/>GCM<sp/>operation<sp/>completes<sp/>in<sp/>the<sp/>background</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2018-2020,<sp/>Texas<sp/>Instruments<sp/>Incorporated</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>*<sp/><sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>Texas<sp/>Instruments<sp/>Incorporated<sp/>nor<sp/>the<sp/>names<sp/>of</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>its<sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS<sp/>&quot;AS<sp/>IS&quot;</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*!****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>@file<sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESGCM.h</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/><sp/><sp/><sp/>AESGCM<sp/>driver<sp/>header</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESGCM_Overview</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>###<sp/>Overview<sp/>#</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>The<sp/>Galois<sp/>Counter<sp/>Mode<sp/>(GCM)<sp/>mode<sp/>of<sp/>operation<sp/>is<sp/>a<sp/>generic</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>authenticated<sp/>encryption<sp/>with<sp/>associated<sp/>data<sp/>(AEAD)<sp/>block<sp/>cipher<sp/>mode.</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>It<sp/>can<sp/>be<sp/>implemented<sp/>with<sp/>any<sp/>block<sp/>cipher.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>AESGCM<sp/>combines<sp/>GHASH<sp/>with<sp/>the<sp/>AES<sp/>block<sp/>cipher<sp/>in<sp/>CTR<sp/>mode<sp/>of<sp/>operation.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>This<sp/>combination<sp/>of<sp/>block<sp/>cipher<sp/>modes<sp/>enables<sp/>GCM<sp/>to<sp/>encrypt<sp/>messages<sp/>of<sp/>any</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>length<sp/>and<sp/>not<sp/>only<sp/>multiples<sp/>of<sp/>the<sp/>block<sp/>cipher<sp/>block<sp/>size.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>CTR<sp/>provides<sp/>confidentiality.<sp/>The<sp/>using<sp/>GHASH<sp/>and<sp/>encrypting<sp/>the<sp/>result<sp/>provides</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>message<sp/>integrity<sp/>and<sp/>authentication.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>The<sp/>AES<sp/>key<sp/>is<sp/>a<sp/>shared<sp/>secret<sp/>between<sp/>the<sp/>two<sp/>parties<sp/>and<sp/>has<sp/>a<sp/>length</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>of<sp/>128,<sp/>192,<sp/>or<sp/>256<sp/>bits.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>The<sp/>IV<sp/>is<sp/>generated<sp/>by<sp/>the<sp/>party<sp/>performing<sp/>the<sp/>authenticated</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>encryption<sp/>operation.<sp/><sp/>Within<sp/>the<sp/>scope<sp/>of<sp/>any<sp/>authenticated</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>encryption<sp/>key,<sp/>the<sp/>IV<sp/>value<sp/>must<sp/>be<sp/>unique.<sp/><sp/>That<sp/>is,<sp/>the<sp/>set<sp/>of</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>IV<sp/>values<sp/>used<sp/>with<sp/>any<sp/>given<sp/>key<sp/>must<sp/>not<sp/>contain<sp/>any<sp/>duplicate</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>values.<sp/><sp/>Using<sp/>the<sp/>same<sp/>IV<sp/>for<sp/>two<sp/>different<sp/>messages<sp/>encrypted</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>same<sp/>key<sp/>destroys<sp/>the<sp/>security<sp/>properties<sp/>of<sp/>GCM.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>The<sp/>optional<sp/>additional<sp/>authentication<sp/>data<sp/>(AAD)<sp/>is<sp/>authenticated</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>but<sp/>not<sp/>encrypted.<sp/>Thus,<sp/>the<sp/>AAD<sp/>is<sp/>not<sp/>included<sp/>in<sp/>the<sp/>AES-GCM<sp/>output.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>It<sp/>can<sp/>be<sp/>used<sp/>to<sp/>authenticate<sp/>packet<sp/>headers,<sp/>timestamps<sp/>and<sp/>other</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>metadata.</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>After<sp/>the<sp/>encryption<sp/>operation,<sp/>the<sp/>ciphertext<sp/>contains<sp/>the<sp/>encrypted</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>data<sp/>and<sp/>the<sp/>message<sp/>authentication<sp/>code<sp/>(MAC).</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>GCM<sp/>is<sp/>highly<sp/>performant<sp/>for<sp/>an<sp/>AEAD<sp/>mode.<sp/>Counter<sp/>with<sp/>CBC-MAC<sp/>requires</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>one<sp/>invocation<sp/>per<sp/>block<sp/>of<sp/>AAD<sp/>and<sp/>two<sp/>invocations<sp/>of<sp/>the<sp/>block<sp/>cipher</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>per<sp/>proccessed<sp/>block<sp/>of<sp/>input;<sp/>one<sp/>to<sp/>compute<sp/>the<sp/>CBC-MAC<sp/>and<sp/>one<sp/>to</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>perform<sp/>CTR.<sp/>GCM<sp/>substitutes<sp/>the<sp/>block<sp/>cipher<sp/>invocation<sp/>during<sp/>CBC-MAC</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>computation<sp/>with<sp/>computing<sp/>GHASH<sp/>over<sp/>the<sp/>same<sp/>input.<sp/>GHASH<sp/>is<sp/>significantly</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>faster<sp/>per<sp/>block<sp/>than<sp/>AES.<sp/>In<sp/>turn,<sp/>this<sp/>gives<sp/>GCM<sp/>a<sp/>performance<sp/>edge</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>over<sp/>CCM.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>###<sp/>Security<sp/>Considerations</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>In<sp/>each<sp/>operation,<sp/>GCM<sp/>limits<sp/>the<sp/>length<sp/>of<sp/>the<sp/>input<sp/>and<sp/>AAD<sp/>to<sp/>guarantee</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>its<sp/>security<sp/>properties:</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>inputLength<sp/>&lt;=<sp/>2^36<sp/>-<sp/>32<sp/>bytes</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>aadLength<sp/>&lt;=<sp/>2^61<sp/>-<sp/>1<sp/>bytes</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>The<sp/>security<sp/>properties<sp/>of<sp/>GCM<sp/>rely<sp/>on<sp/>the<sp/>MAC<sp/>size.<sp/>While<sp/>MAC<sp/>lengths<sp/>of</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>[4,<sp/>8,<sp/>12,<sp/>13,<sp/>14,<sp/>15,<sp/>16]<sp/>bytes<sp/>are<sp/>permitted,<sp/>it<sp/>is<sp/>recommended<sp/>to</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>use<sp/>the<sp/>full<sp/>16-byte<sp/>MAC.</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>See<sp/>NIST<sp/>SP<sp/>800-38D<sp/>for<sp/>more<sp/>a<sp/>more<sp/>detailed<sp/>discussion<sp/>of<sp/>security</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>considerations.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESGCM_Usage</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>###<sp/>Usage<sp/>#</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>####<sp/>Before<sp/>starting<sp/>a<sp/>GCM<sp/>operation<sp/>#</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>Before<sp/>starting<sp/>a<sp/>GCM<sp/>operation,<sp/>the<sp/>application<sp/>must<sp/>do<sp/>the<sp/>following:</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESGCM_init()<sp/>to<sp/>initialize<sp/>the<sp/>driver</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESGCM_Params_init()<sp/>to<sp/>initialize<sp/>the<sp/>#AESGCM_Params<sp/>to<sp/>default<sp/>values.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Modify<sp/>the<sp/>#AESGCM_Params<sp/>as<sp/>desired</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Call<sp/>AESGCM_open()<sp/>to<sp/>open<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>driver</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Initialize<sp/>a<sp/>CryptoKey.<sp/>These<sp/>opaque<sp/>datastructures<sp/>are<sp/>representations</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>keying<sp/>material<sp/>and<sp/>its<sp/>storage.<sp/>Depending<sp/>on<sp/>how<sp/>the<sp/>keying<sp/>material</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>stored<sp/>(RAM<sp/>or<sp/>flash,<sp/>key<sp/>store,<sp/>key<sp/>blob),<sp/>the<sp/>CryptoKey<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>differently.<sp/>The<sp/>AESGCM<sp/>API<sp/>can<sp/>handle<sp/>all<sp/>types<sp/>of<sp/>CryptoKey.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>However,<sp/>not<sp/>all<sp/>device-specific<sp/>implementions<sp/>support<sp/>all<sp/>types<sp/>of<sp/>CryptoKey.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Devices<sp/>without<sp/>a<sp/>key<sp/>store<sp/>will<sp/>not<sp/>support<sp/>CryptoKeys<sp/>with<sp/>keying<sp/>material</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stored<sp/>in<sp/>a<sp/>key<sp/>store<sp/>for<sp/>example.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>devices<sp/>support<sp/>plaintext<sp/>CryptoKeys.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-<sp/>Initialise<sp/>the<sp/>#AESGCM_Operation<sp/>using<sp/>AESGCM_Operation_init()<sp/>and<sp/>set<sp/>all</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>length,<sp/>key,<sp/>and<sp/>buffer<sp/>fields.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>####<sp/>Starting<sp/>a<sp/>GCM<sp/>operation<sp/>#</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>The<sp/>AESGCM_oneStepEncrypt()<sp/>and<sp/>AESGCM_oneStepDecrypt()<sp/>functions<sp/>perform<sp/>a<sp/>GCM<sp/>operation<sp/>in<sp/>a<sp/>single<sp/>call.</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>When<sp/>performing<sp/>a<sp/>decryption<sp/>operation<sp/>with<sp/>AESGCM_oneStepDecrypt(),<sp/>the<sp/>MAC<sp/>is</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>automatically<sp/>verified.</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>####<sp/>After<sp/>the<sp/>GCM<sp/>operation<sp/>completes<sp/>#</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>After<sp/>the<sp/>GCM<sp/>operation<sp/>completes,<sp/>the<sp/>application<sp/>should<sp/>either<sp/>start<sp/>another<sp/>operation</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>or<sp/>close<sp/>the<sp/>driver<sp/>by<sp/>calling<sp/>AESGCM_close()</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESGCM_Synopsis</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>##<sp/>Synopsis</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESGCM_Synopsis_Code</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>//<sp/>Import<sp/>AESGCM<sp/>Driver<sp/>definitions</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>//<sp/>Define<sp/>name<sp/>for<sp/>AESGCM<sp/>channel<sp/>index</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>#define<sp/>AESGCM_INSTANCE<sp/>0</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>AESGCM_init();</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>handle<sp/>=<sp/>AESGCM_open(AESGCM_INSTANCE,<sp/>NULL);</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>//<sp/>Initialize<sp/>symmetric<sp/>key</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>//<sp/>Set<sp/>up<sp/>AESGCM_Operation</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>operation.nonce<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>nonce;</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>operation.nonceLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(nonce);</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>encryptionResult<sp/>=<sp/>AESGCM_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>AESGCM_close(handle);</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>@anchor<sp/>ti_drivers_AESGCM_Examples</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>####<sp/>Examples</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>#####<sp/>Single<sp/>call<sp/>GCM<sp/>encryption<sp/>+<sp/>authentication<sp/>with<sp/>plaintext<sp/>CryptoKey<sp/>in<sp/>blocking<sp/>return<sp/>mode<sp/>#</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>AESGCM_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>int_fast16_t<sp/>encryptionResult;</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>iv[12]<sp/>=<sp/>&quot;12-byte<sp/>IV<sp/><sp/>&quot;;</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>aad[]<sp/>=<sp/>&quot;This<sp/>string<sp/>will<sp/>be<sp/>authenticated<sp/>but<sp/>not<sp/>encrypted.&quot;;</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>plaintext[]<sp/>=<sp/>&quot;This<sp/>string<sp/>will<sp/>be<sp/>encrypted<sp/>and<sp/>authenticated.&quot;;</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>mac[16];</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>ciphertext[sizeof(plaintext)];</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>keyingMaterial[32]<sp/>=<sp/>{0x00,<sp/>0x01,<sp/>0x02,<sp/>0x03,<sp/>0x04,<sp/>0x05,<sp/>0x06,<sp/>0x07,</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x08,<sp/>0x09,<sp/>0x0A,<sp/>0x0B,<sp/>0x0C,<sp/>0x0D,<sp/>0x0E,<sp/>0x0F,</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x10,<sp/>0x11,<sp/>0x12,<sp/>0x13,<sp/>0x14,<sp/>0x15,<sp/>0x16,<sp/>0x17,</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x18,<sp/>0x19,<sp/>0x1A,<sp/>0x1B,<sp/>0x1C,<sp/>0x1D,<sp/>0x1E,<sp/>0x1F};</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>handle<sp/>=<sp/>AESGCM_open(0,<sp/>NULL);</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>AESGCM_Operation<sp/>operation;</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(plaintext);</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>operation.ivLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>encryptionResult<sp/>=<sp/>AESGCM_oneStepEncrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>if<sp/>(encryptionResult<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>AESGCM_close(handle);</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>#####<sp/>Single<sp/>call<sp/>GCM<sp/>decryption<sp/>+<sp/>verification<sp/>with<sp/>plaintext<sp/>CryptoKey<sp/>in<sp/>callback<sp/>return<sp/>mode<sp/>#</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/AESGCM.h&gt;</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>#include<sp/>&lt;ti/drivers/cryptoutils/cryptokey/CryptoKeyPlaintext.h&gt;</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>...</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>//<sp/>The<sp/>following<sp/>test<sp/>vector<sp/>is<sp/>Packet<sp/>Vector<sp/>1<sp/>from<sp/>RFC<sp/>3610<sp/>of<sp/>the<sp/>IETF.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>iv[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x1f,<sp/>0x80,<sp/>0x3c,<sp/>0x52,<sp/>0xca,<sp/>0xc4,<sp/>0x97,<sp/>0xe1,</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x55,<sp/>0xaa,<sp/>0x55,<sp/>0x2d};</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>aad[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x3b,<sp/>0xba,<sp/>0x31,<sp/>0x28,<sp/>0x9d,<sp/>0x05,<sp/>0xf5,<sp/>0x0f,</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xed,<sp/>0x6c,<sp/>0x53,<sp/>0x35,<sp/>0x3c,<sp/>0x1f,<sp/>0x74,<sp/>0xd8,</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x28,<sp/>0xa9,<sp/>0x96,<sp/>0xb8,<sp/>0xd6,<sp/>0x84,<sp/>0xfe,<sp/>0x64,</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x7f,<sp/>0x7c,<sp/>0x40,<sp/>0xc0,<sp/>0xd5,<sp/>0x68,<sp/>0x8c,<sp/>0x89,</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x68,<sp/>0x1a,<sp/>0x33,<sp/>0xb1,<sp/>0x0c,<sp/>0xb7,<sp/>0x14,<sp/>0xb6,</highlight></codeline>
<codeline lineno="237"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x49,<sp/>0x0b,<sp/>0xdf,<sp/>0x1f,<sp/>0x16,<sp/>0x60,<sp/>0x60,<sp/>0xa7};</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>mac[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x39,<sp/>0x03,<sp/>0xe4,<sp/>0xdc,<sp/>0xa4,<sp/>0xe7,<sp/>0xc8,<sp/>0x21,</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x62,<sp/>0x1a,<sp/>0xbb,<sp/>0xb2,<sp/>0x37,<sp/>0x2c,<sp/>0x97};</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>ciphertext[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0xf8,<sp/>0x7e,<sp/>0xf7,<sp/>0x99,<sp/>0x4a,<sp/>0x86,<sp/>0xf3,<sp/>0xe9,</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xa3,<sp/>0xab,<sp/>0x6a,<sp/>0x6f,<sp/>0x2d,<sp/>0x34,<sp/>0x3b,<sp/>0xbd};</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>keyingMaterial[]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{0x4f,<sp/>0xd7,<sp/>0xf2,<sp/>0x09,<sp/>0xdf,<sp/>0xb0,<sp/>0xdf,<sp/>0xbd,</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xd9,<sp/>0x8d,<sp/>0x2d,<sp/>0xb4,<sp/>0x98,<sp/>0x66,<sp/>0x4c,<sp/>0x88};</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>uint8_t<sp/>plaintext[sizeof(ciphertext)];</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>//<sp/>The<sp/>plaintext<sp/>should<sp/>be<sp/>the<sp/>following<sp/>after<sp/>the<sp/>decryption<sp/>operation:</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>//<sp/>0x17,<sp/>0x9d,<sp/>0xcb,<sp/>0x79,<sp/>0x5c,<sp/>0x09,<sp/>0x8f,<sp/>0xc5,<sp/>0x31,<sp/>0x4b,<sp/>0xde,<sp/>0x0d,<sp/>0x39,<sp/>0x9d,<sp/>0x7a,<sp/>0x10</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>void<sp/>gcmCallback(AESGCM_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESGCM_Operation<sp/>*operation,</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AESGCM_OperationType<sp/>operationType)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(returnValue<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*<sp/>AESGCM_Operation<sp/>operation;</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>CryptoKey<sp/>cryptoKey;</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>void<sp/>gcmStartFunction(void)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESGCM_Handle<sp/>handle;</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESGCM_Params<sp/>params;</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>decryptionResult;</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESGCM_Params_init(&amp;params);</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.returnBehavior<sp/>=<sp/>AESGCM_RETURN_BEHAVIOR_CALLBACK;</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>params.callbackFxn<sp/>=<sp/>gcmCallback;</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>handle<sp/>=<sp/>AESGCM_open(0,<sp/>&amp;params);</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(handle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>CryptoKeyPlaintext_initKey(&amp;cryptoKey,<sp/>keyingMaterial,<sp/>sizeof(keyingMaterial));</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>AESGCM_Operation_init(&amp;operation);</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>&amp;cryptoKey;</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>aad;</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.aadLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(aad);</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.input<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ciphertext;</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.output<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plaintext;</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.inputLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(ciphertext);</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.iv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>iv;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.mac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>mac;</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>operation.macLength<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>sizeof(mac);</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>decryptionResult<sp/>=<sp/>AESGCM_oneStepDecrypt(handle,<sp/>&amp;operation);</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>if<sp/>(decryptionResult<sp/>!=<sp/>AESGCM_STATUS_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>handle<sp/>error</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>//<sp/>do<sp/>other<sp/>things<sp/>while<sp/>GCM<sp/>operation<sp/>completes<sp/>in<sp/>the<sp/>background</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ti_drivers_AESGCM__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ti_drivers_AESGCM__include</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_crypto_key_8h" kindref="compound">ti/drivers/cryptoutils/cryptokey/CryptoKey.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="_a_e_s_g_c_m_8h_1a4c11eb3acc40e87633c5921ddcb367cc" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_RESERVED<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-32)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="_a_e_s_g_c_m_8h_1aca8f2f76739e5403a8b465da4a0e9379" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_SUCCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="_a_e_s_g_c_m_8h_1a5c7c063df15cb19f2176358681dbe963" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_ERROR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="_a_e_s_g_c_m_8h_1a09267071cac6f0e9cceddf1fb85049d4" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_RESOURCE_UNAVAILABLE<sp/>(-2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="364" refid="_a_e_s_g_c_m_8h_1a0afeb773b5c22467af1019b0361dc3e4" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_MAC_INVALID<sp/>(-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="_a_e_s_g_c_m_8h_1ae02f2ab16e0c9e15fb6670528de97118" refkind="member"><highlight class="preprocessor">#define<sp/>AESGCM_STATUS_CANCELED<sp/>(-4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="struct_a_e_s_g_c_m___config" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="384" refid="struct_a_e_s_g_c_m___config_1af301ca85c927167aea8158974376ecdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___config_1af301ca85c927167aea8158974376ecdb" kindref="member">object</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="387" refid="struct_a_e_s_g_c_m___config_1af583f97a085187e114d852f40d50fbda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_e_s_g_c_m___config_1af583f97a085187e114d852f40d50fbda" kindref="member">hwAttrs</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref><sp/>*<ref refid="_a_e_s_g_c_m_8h_1a559d0e1e350ae96f895bde9b1bdca37a" kindref="member">AESGCM_Handle</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417" refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a956aafcfb3b1293e1e51bc84bd21dfc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a956aafcfb3b1293e1e51bc84bd21dfc0" kindref="member">AESGCM_RETURN_BEHAVIOR_CALLBACK</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="423" refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a94ec72fe16e4cd2511b20f9ff8f99026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145a94ec72fe16e4cd2511b20f9ff8f99026" kindref="member">AESGCM_RETURN_BEHAVIOR_BLOCKING</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427" refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145ad3d5fdbf9caca9ce5c9ce9380cf2d202" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145ad3d5fdbf9caca9ce5c9ce9380cf2d202" kindref="member">AESGCM_RETURN_BEHAVIOR_POLLING</ref><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}<sp/><ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145" kindref="member">AESGCM_ReturnBehavior</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="437" refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ad528f2f1ac8fd56adbcaf2a205c649ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ad528f2f1ac8fd56adbcaf2a205c649ce" kindref="member">AESGCM_MODE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="438" refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ae14730c470a9995870f3f72e0cc09c4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8ae14730c470a9995870f3f72e0cc09c4c" kindref="member">AESGCM_MODE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="439"><highlight class="normal">}<sp/><ref refid="_a_e_s_g_c_m_8h_1a22bf11aa6287f086823a1d6c1fc32de8" kindref="member">AESGCM_Mode</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="struct_a_e_s_g_c_m___operation" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="446" refid="struct_a_e_s_g_c_m___operation_1a4ecc3af41ed6eac831fc2f7a4090cd72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1a4ecc3af41ed6eac831fc2f7a4090cd72" kindref="member">key</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447" refid="struct_a_e_s_g_c_m___operation_1ad471ab2346e95155f4beafe196c43116" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1ad471ab2346e95155f4beafe196c43116" kindref="member">aad</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451" refid="struct_a_e_s_g_c_m___operation_1acd270903c1f5d2cfffb2ae2d116b3baa" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1acd270903c1f5d2cfffb2ae2d116b3baa" kindref="member">input</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456" refid="struct_a_e_s_g_c_m___operation_1aaeded7526527c1d5ea01df253d399690" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1aaeded7526527c1d5ea01df253d399690" kindref="member">output</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462" refid="struct_a_e_s_g_c_m___operation_1a3f053b2ba61da4a797c9c0ec2753afac" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1a3f053b2ba61da4a797c9c0ec2753afac" kindref="member">iv</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468" refid="struct_a_e_s_g_c_m___operation_1a3c6347ede5b695cce9000e76df339cc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___operation_1a3c6347ede5b695cce9000e76df339cc2" kindref="member">mac</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474" refid="struct_a_e_s_g_c_m___operation_1a5ea51bffd512fce037617946dd45474d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation_1a5ea51bffd512fce037617946dd45474d" kindref="member">aadLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478" refid="struct_a_e_s_g_c_m___operation_1abd63a7b0e99724ce1a1ff018ce588efc" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation_1abd63a7b0e99724ce1a1ff018ce588efc" kindref="member">inputLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482" refid="struct_a_e_s_g_c_m___operation_1af469718e7141bfac1b83858a57b4d254" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation_1af469718e7141bfac1b83858a57b4d254" kindref="member">ivLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="485" refid="struct_a_e_s_g_c_m___operation_1a81296a660e12220729f7367a4c732271" refkind="member"><highlight class="normal"><sp/><sp/><sp/>uint8_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation_1a81296a660e12220729f7367a4c732271" kindref="member">macLength</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488" refid="struct_a_e_s_g_c_m___operation_1aa719d1e49c2eb974aa14b7cda6367c43" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation_1aa719d1e49c2eb974aa14b7cda6367c43" kindref="member">ivInternallyGenerated</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="492"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="498" refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86aaef2721c0d4a24bb1e3e4c24a7565963" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86aaef2721c0d4a24bb1e3e4c24a7565963" kindref="member">AESGCM_OPERATION_TYPE_ENCRYPT</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="499" refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86a9094bc77d234fe95e2d664a9cc555b65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86a9094bc77d234fe95e2d664a9cc555b65" kindref="member">AESGCM_OPERATION_TYPE_DECRYPT</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}<sp/><ref refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86" kindref="member">AESGCM_OperationType</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="_a_e_s_g_c_m_8h_1a93425ed5237036ac28f882518d702013" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="_a_e_s_g_c_m_8h_1a93425ed5237036ac28f882518d702013" kindref="member">AESGCM_CallbackFxn</ref>)<sp/>(AESGCM_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_fast16_t<sp/>returnValue,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref><sp/>*operation,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a6c46f7df33bb1a4e7d664c1ec056eb86" kindref="member">AESGCM_OperationType</ref><sp/>operationType);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="struct_a_e_s_g_c_m___params" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="531" refid="struct_a_e_s_g_c_m___params_1ae12dbb42e2935088aae1d3e270221a2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a194ade55cf88db59f7cf2f836ce37145" kindref="member">AESGCM_ReturnBehavior</ref><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___params_1ae12dbb42e2935088aae1d3e270221a2b" kindref="member">returnBehavior</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532" refid="struct_a_e_s_g_c_m___params_1af71c89b1c7a6c4778792a74eef52d246" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_a_e_s_g_c_m_8h_1a93425ed5237036ac28f882518d702013" kindref="member">AESGCM_CallbackFxn</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___params_1af71c89b1c7a6c4778792a74eef52d246" kindref="member">callbackFxn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533" refid="struct_a_e_s_g_c_m___params_1ad01a2385e44acbdb7b91ec5546921232" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_e_s_g_c_m___params_1ad01a2385e44acbdb7b91ec5546921232" kindref="member">timeout</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536" refid="struct_a_e_s_g_c_m___params_1ac3aee9a5869a33e8c31ed6fd1495e6e4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_a_e_s_g_c_m___params_1ac3aee9a5869a33e8c31ed6fd1495e6e4" kindref="member">custom</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal">}<sp/><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref><sp/><ref refid="_a_e_s_g_c_m_8h_1a1e53ae163c5726e54da103f77463c820" kindref="member">AESGCM_defaultParams</ref>;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_g_c_m_8h_1a997f24b0b4b6dc5c425df8dfe2ceadfa" kindref="member">AESGCM_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_g_c_m_8h_1a6797cf0b48d6455adb41c65a42de11dd" kindref="member">AESGCM_Params_init</ref>(<ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal">AESGCM_Handle<sp/><ref refid="_a_e_s_g_c_m_8h_1aa1d6aa67f011cca8d309ca3da2c95b66" kindref="member">AESGCM_open</ref>(uint_least8_t<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_g_c_m_8h_1ab8ccb816d0e609a87bcb08c10b0185a3" kindref="member">AESGCM_close</ref>(AESGCM_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_a_e_s_g_c_m_8h_1a7632b455c1c1a08ab12155b26734dcf6" kindref="member">AESGCM_Operation_init</ref>(<ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref><sp/>*operationStruct);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_g_c_m_8h_1a8d10ed85034fdcfb0cc92acec0cfa12e" kindref="member">AESGCM_oneStepEncrypt</ref>(AESGCM_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref><sp/>*operationStruct);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_g_c_m_8h_1a46cb4609b19aeb73b78361a8cef2825d" kindref="member">AESGCM_oneStepDecrypt</ref>(AESGCM_Handle<sp/>handle,<sp/><ref refid="struct_a_e_s_g_c_m___operation" kindref="compound">AESGCM_Operation</ref><sp/>*operationStruct);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal">int_fast16_t<sp/><ref refid="_a_e_s_g_c_m_8h_1a8898853d26da1c3adb0ea8bf11e811c2" kindref="member">AESGCM_cancelOperation</ref>(AESGCM_Handle<sp/>handle);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">AESGCM_Handle<sp/><ref refid="_a_e_s_g_c_m_8h_1abecd438abea41b06c5670a222e9275bf" kindref="member">AESGCM_construct</ref>(<ref refid="struct_a_e_s_g_c_m___config" kindref="compound">AESGCM_Config</ref><sp/>*config,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_e_s_g_c_m___params" kindref="compound">AESGCM_Params</ref><sp/>*params);</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ti_drivers_AESGCM__include<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="exports/tidrivers_msp432e4/source/ti/drivers/AESGCM.h"/>
  </compounddef>
</doxygen>
